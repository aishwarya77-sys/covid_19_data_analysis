<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='WHO-COVID-19-global-data' inline='true' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WHO-COVID-19-global-data' name='textscan.0dn9zzn15ea5kj1bf0bbh1gziqe5'>
            <connection class='textscan' directory='C:/Users/HUKAM SINGH/Downloads' filename='WHO-COVID-19-global-data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0dn9zzn15ea5kj1bf0bbh1gziqe5' name='WHO-COVID-19-global-data.csv' table='[WHO-COVID-19-global-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='integer' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='integer' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0dn9zzn15ea5kj1bf0bbh1gziqe5' name='WHO-COVID-19-global-data.csv' table='[WHO-COVID-19-global-data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Date_reported' ordinal='0' />
            <column datatype='string' name='Country_code' ordinal='1' />
            <column datatype='string' name='Country' ordinal='2' />
            <column datatype='string' name='WHO_region' ordinal='3' />
            <column datatype='integer' name='New_cases' ordinal='4' />
            <column datatype='integer' name='Cumulative_cases' ordinal='5' />
            <column datatype='integer' name='New_deaths' ordinal='6' />
            <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date_reported</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date_reported]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Date_reported</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_code]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHO_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[WHO_region]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>WHO_region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_cases]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>New_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_cases]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Cumulative_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New_deaths]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>New_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cumulative_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cumulative_deaths]</local-name>
            <parent-name>[WHO-COVID-19-global-data.csv]</parent-name>
            <remote-alias>Cumulative_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Mortality Rate' datatype='real' name='[Calculation_1622703270111309824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[New_deaths]/[New_cases]' />
      </column>
      <column caption='Recovered' datatype='integer' name='[Calculation_1622703270112792577]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Cumulative_cases]-[Cumulative_deaths]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country code' datatype='string' name='[Country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
      <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
      <column caption='Date reported' datatype='date' name='[Date_reported]' role='dimension' type='ordinal' />
      <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
      <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
      <column caption='WHO region' datatype='string' name='[WHO_region]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='WHO-COVID-19-global-data.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]' role='measure' type='quantitative' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/HUKAMS~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0pccld314vo3fx1g6xc2k08yfl1u.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/15/2024 10:03:48 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date_reported</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date_reported]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date_reported</remote-alias>
              <ordinal>0</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>316</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_code</remote-alias>
              <ordinal>1</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>325</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>2</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>325</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>WHO_region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[WHO_region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>WHO_region</remote-alias>
              <ordinal>3</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[New_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_cases</remote-alias>
              <ordinal>4</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5234</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cumulative_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cumulative_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cumulative_cases</remote-alias>
              <ordinal>5</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11134</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>New_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[New_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>New_deaths</remote-alias>
              <ordinal>6</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1148</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cumulative_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Cumulative_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cumulative_deaths</remote-alias>
              <ordinal>7</ordinal>
              <family>WHO-COVID-19-global-data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5060</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Republic of Tanzania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ickiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lao People&apos;s Democratic Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TÃ¼rkiye&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolivia (Plurinational State of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Netherlands (Kingdom of the)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United States of America&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bonaire, Saint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RÃ©union&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Icvanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (Federated States of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic People&apos;s Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CuraÃ§ao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fesco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Venezuela (Bolivarian Republic of)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Democratic Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kosovo (in accordance with UN Security Council resolution 1244 (1999))&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Diamond&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;CÃ´te d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom of Great Britain and Northern Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chefoo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;occupied Palestinian territory, including east Jerusalem&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint BarthÃ©lemy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='WHO-COVID-19-global-data.csv' id='WHO-COVID-19-global-data.csv_A7D0B275A6D84A3E87F557A84415FA63'>
            <properties context=''>
              <relation connection='textscan.0dn9zzn15ea5kj1bf0bbh1gziqe5' name='WHO-COVID-19-global-data.csv' table='[WHO-COVID-19-global-data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Date_reported' ordinal='0' />
                  <column datatype='string' name='Country_code' ordinal='1' />
                  <column datatype='string' name='Country' ordinal='2' />
                  <column datatype='string' name='WHO_region' ordinal='3' />
                  <column datatype='integer' name='New_cases' ordinal='4' />
                  <column datatype='integer' name='Cumulative_cases' ordinal='5' />
                  <column datatype='integer' name='New_deaths' ordinal='6' />
                  <column datatype='integer' name='Cumulative_deaths' ordinal='7' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Confirmed vs Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ehw26h0m5pcyy13olaxz06yicpz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([New_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' />
              <size column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_deaths:qk]</rows>
        <cols>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_cases:qk]</cols>
      </table>
      <simple-id uuid='{3284863F-B436-4D6D-8BD5-7A001114DCBF}' />
    </worksheet>
    <worksheet name='Global Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ehw26h0m5pcyy13olaxz06yicpz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[New_cases]' derivation='Sum' name='[sum:New_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[Longitude (generated)]' field-type='quantitative' max='32384372.202618882' min='-27098209.990776457' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[Latitude (generated)]' field-type='quantitative' max='14594859.003914626' min='-10418716.140194437' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]' />
              <lod column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' />
              <lod column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[Latitude (generated)]</rows>
        <cols>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2210B94D-3009-4D05-A96D-06E0B52CE0C6}' />
    </worksheet>
    <worksheet name='Mortality Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ehw26h0m5pcyy13olaxz06yicpz'>
            <column caption='Mortality Rate' datatype='real' name='[Calculation_1622703270111309824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[New_deaths]/[New_cases]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New cases' datatype='integer' name='[New_cases]' role='measure' type='quantitative' />
            <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1622703270111309824]' derivation='Sum' name='[sum:Calculation_1622703270111309824:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Calculation_1622703270111309824:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</rows>
        <cols>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Calculation_1622703270111309824:qk]</cols>
      </table>
      <simple-id uuid='{4EBD1460-34F4-44B8-B1E0-731D82021E62}' />
    </worksheet>
    <worksheet name='Top 10 Confirmed Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ehw26h0m5pcyy13olaxz06yicpz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cumulative_cases]' derivation='Sum' name='[sum:Cumulative_cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Republic of Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;TÃ¼rkiye&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]</rows>
        <cols>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{1371CCD2-B25B-4A7E-A00E-9408801DEEE7}' />
    </worksheet>
    <worksheet name='Top 10 Death Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ehw26h0m5pcyy13olaxz06yicpz'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='New deaths' datatype='integer' name='[New_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[New_deaths]' derivation='Sum' name='[sum:New_deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([New_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_deaths:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e2da</color>
                <color>#f3d3c3</color>
                <color>#f5c4ab</color>
                <color>#f6b493</color>
                <color>#f8a57c</color>
                <color>#f99563</color>
                <color>#fa854b</color>
                <color>#fc7532</color>
                <color>#fd6519</color>
                <color>#ff5500</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_deaths:qk]' />
              <color column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_deaths:qk]' />
              <text column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' />
              <text column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{212D3D85-6025-4121-8099-C95508B90E88}' />
    </worksheet>
    <worksheet name='Top 10 Recoveries'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO-COVID-19-global-data' name='federated.1ehw26h0m5pcyy13olaxz06yicpz' />
          </datasources>
          <datasource-dependencies datasource='federated.1ehw26h0m5pcyy13olaxz06yicpz'>
            <column caption='Recovered' datatype='integer' name='[Calculation_1622703270112792577]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Cumulative_cases]-[Cumulative_deaths]' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Cumulative cases' datatype='integer' name='[Cumulative_cases]' role='measure' type='quantitative' />
            <column caption='Cumulative deaths' datatype='integer' name='[Cumulative_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1622703270112792577]' derivation='Sum' name='[sum:Calculation_1622703270112792577:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Republic of Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom of Great Britain and Northern Ireland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States of America&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Calculation_1622703270112792577:qk]' />
              <text column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' />
              <color column='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E4C09518-7CE6-4737-8E2A-8C4332D88347}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='19' param='horz' type-v2='layout-flow' w='99002' x='499' y='1072'>
            <zone h='97856' id='14' param='horz' type-v2='layout-flow' w='89027' x='499' y='1072'>
              <zone h='97856' id='9' param='horz' type-v2='layout-flow' w='52867' x='499' y='1072'>
                <zone h='97856' id='7' type-v2='layout-basic' w='52867' x='499' y='1072'>
                  <zone h='48928' id='5' name='Top 10 Confirmed Countries' w='29988' x='499' y='1072'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48928' id='11' name='Top 10 Recoveries' w='22879' x='30487' y='1072'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48928' id='12' name='Top 10 Death Cases' w='22879' x='30487' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='48928' id='17' name='Confirmed vs Deaths' w='29988' x='499' y='50000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone fixed-size='580' h='97856' id='13' is-fixed='true' param='vert' type-v2='layout-flow' w='36160' x='53366' y='1072'>
                <zone h='97856' id='16' name='Global Cases' w='36160' x='53366' y='1072'>
                  <layout-cache minheight='258' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97856' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='9975' x='89526' y='1072'>
              <zone h='38069' id='20' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' type-v2='color' w='9975' x='89526' y='1072'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='17962' id='21' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]' type-v2='size' w='9975' x='89526' y='39141'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97856' id='24' param='vert' type-v2='layout-flow' w='99002' x='499' y='1072'>
                <zone fixed-size='280' h='48928' id='5' is-fixed='true' name='Top 10 Confirmed Countries' w='29988' x='499' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48928' id='11' is-fixed='true' name='Top 10 Recoveries' w='22879' x='30487' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97856' id='16' is-fixed='true' name='Global Cases' w='36160' x='53366' y='1072'>
                  <layout-cache minheight='258' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48928' id='17' is-fixed='true' name='Confirmed vs Deaths' w='29988' x='499' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='38069' id='20' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' type-v2='color' w='9975' x='89526' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='17962' id='21' name='Confirmed vs Deaths' pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]' type-v2='size' w='9975' x='89526' y='39141'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48928' id='12' is-fixed='true' name='Top 10 Death Cases' w='22879' x='30487' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{67790044-A037-45B0-8EAD-3682858ADA54}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Top 10 Confirmed Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FB11529-3B3B-4094-9EB9-BC304229FF3B}' />
    </window>
    <window class='worksheet' name='Global Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{336B7C09-A465-4535-A513-6DB244DBDA85}' />
    </window>
    <window class='worksheet' name='Top 10 Death Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:New_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75BE38CD-4469-469C-B52B-B8178B280C51}' />
    </window>
    <window class='worksheet' name='Confirmed vs Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[sum:Cumulative_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A615FBAD-7B3F-482D-A421-AC59D49D8823}' />
    </window>
    <window class='worksheet' name='Mortality Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4FD1A365-BF8D-4BDC-B47E-68E5B5B45D4E}' />
    </window>
    <window class='worksheet' name='Top 10 Recoveries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{71F785D4-695F-4468-9061-D81D54B52AB2}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Confirmed vs Deaths'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Global Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Confirmed Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 10 Death Cases' />
        <viewpoint name='Top 10 Recoveries'>
          <highlight field='[federated.1ehw26h0m5pcyy13olaxz06yicpz].[none:Country:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7B4E5CCD-A563-4A51-AE4D-2800AA07A014}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Confirmed vs Deaths' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Global Cases' width='192'>
      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
      WM2eycL/A67S/DPE4SSdAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Mortality Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29SXBcW5rf97tTZt6c50zM80ACIACCwxu6W92qbkVIDoUVjvDCU4QX3lhe
      yL1whzbyzlvv7Y3D4fDCliNUdndYUqtdraquqsfHGcQ8z3Mmch7v5AVYfO8VhwcSiYcEeH8r
      Erz3y3PA+897zne+8z+CZVkWNjafKeJVN8DG5iqxBWDzWWMLwOazxhaAzWeNLQCbzxpbADaf
      NbYAbD5rbAHYfNbceAGYpnnVTXiDYRh2nCaLIzfkE9+DXi2RqRjEQn4sy+Lk8JBwS8u5PtTU
      65RqJi7ZwhAUXI4P31XI5/H4/W8p2jRNRPFiOj/dOqZ+Wr1QjEa1xY7T2DiXKoDC0Rq/mMvz
      H/+jP8CspPnX/+rf8R/+1/8FSiHLab5MoqUFs15DcbkwqhVQXOj1Klq1gsvtoq7D0fJzDo0I
      o0M9OKhxmisTSyQQzTrlSpVyzSARj1LXNLyWRS6Tolg1SCYTSKLQkH5ouRrpxYOGxLJpLi5V
      AAgCnRGVvUwNfW+LrsFeAIrFErJgMj2zSEDQaLk9Sm59HqNllPUnf40n1s94f4SNQ5OILKNI
      CrIkUsyVEAWd6dlFWt0Vdqp+QkIOTVI53t4iHApSqlQx62XmVqvcGey+1O7ZXH8uVwBAtKOb
      9O46pi4RdYmAxcHeNrrgIFPSCATdP7heDSa4PzmCUDoCwOv1oykxvKrE+sIedUskU6jQ5gvQ
      3d2DWtkhVdUAMI06+zs7WIJAVfJedtdsbgCXPgkWHR6M4gGKGn79E51S1SQRCyMIAi4H7O8f
      sLWzjwUoigNB+G7o4nK7yZzsky/mKVYhEYsgCe8e2uj1Ejoq0VDgsrtlc0MQLrMcWq9XMEQn
      Vq2I4PRiVis4PG7KuVMqhoRXdaA6FQ4Pj1G9XtweH3q9itvtBkOjrIHbKZE+OUbxBJGMMsU6
      eN0uHJIAsgvRrKNbMoZew62qZE9PMEQXqsuBW3Wh6zqyfLEXXfEwR+kof+Hfx3WeLN7UOJcq
      gGagEQKo1+s4HI4Lt0XTNBRFseM0UZxLnwN8DHolx1HBoi0e5ORwH18kiUu5+qWK4laGzPrJ
      xQNZFrxn+PZTxHFHvbRMdV/8828QTSUA2eVh69ljYsEJVjcPeBCLs7Y4T132MdTXzt7mJtlc
      Hl84Si6dpqN/CJ9isLC4TLi1h2RQYWfrkGyhQN+tUfzqxb9NALRKneppqSGxrhLZ2VT/3U3B
      1X+9fh9BZrg7yr//5SO6h29xvLmE7kngM3NsH2fZ2j5g6HY/6yvbDA90sLa1x+z0NF1DIxyt
      LVAo5zlI17k91M3a2vpV98bmGtBcAgDC7f0oskgy4KZQzHOwtcZ+Og+Whdvrw+FQCAZCOBUZ
      QYBc7pTluRlqholmCIRCISTZiUhjltVtbjZNJwAQUd0qggDtXb3IgoEgO/C6XcjS2StckiRA
      QJJE+vv60HUTp9uPUxYQJQFBAElqwq7ZNB12FugcFNN5qF/812QYOpJ08XH4p8aRnDJq2PPm
      79c5e9OoONd2VmRZFpZlNSRv/GMoXhmHLF04TiPEiCCgG0JDHhSbJhVAOXvM7NImpmUxfGeS
      oPvtHHw9f8LqSZWR/s5Lb4+V/msKR3916Z9zHgQljGvof7jqZtwYmlIAq6ur9I/eI+Q++5Zb
      XVulv6+fpYUF+gZ6mZt+RaVcxBnvI32wxfruEYo3wu2uII+fLOJwibT1jdEWteuBbD5MU84U
      h2+PsPzyMb/59jl1wyKXywGQOc1wtLtOoH2YyTsjOCTwhyI4ZZnNlVVqep1wsoe7E3dIHW5f
      cS9srgNNKQDZ5eOLr/+AkXY3yzupNz+3LAvTNJEkEYuzSemLFy8ZHBunpyWKCQgIQGP2Adjc
      fJpyCHS8u8bWYRaQGJuIcFA94OmzZ9QFB4n2HqZfTHMsCARa+/BFQ8y8fElds1BkFz4vCKJE
      wO+76m7YXAPsNOg5qNWqOH5kS+a52qLpyMpF4wjounlt047NFqcp3wAfQ71SRBdduC+xzqWc
      2yZXPbxwHEM3kN6TTvWG+nD72s4ZqXk2+l93rkAAFqtzLzkt6ximwr374yiv9+5W8ik0OYjf
      LZPZWSXvStAV+/BQppDaJefsoDd+eV052fpr1l78z5cWH+DWl39B99h/fqmfYfM2V/IGSKUz
      9N15SDTgBgr84v99ghgMcDvppRb24HfLWJaJ+Xp0Vi2eMrewRqlaY/LBJE9+8Rv80QCG4qc/
      IoCp8+zxI4bu3GVnZY58oUy4Y5CBjthVdM/mGnEFWSCB+19+xcnWIn/7q0dolongDPD3vpxC
      xOSdMxILBFFEKxfIFCoEY+3cu/8AxSyBqfP8t78k2HUbj0NEFM/qgQ6PLj5ksbn5/PQCsCxO
      M3mGxiaJKhoFzSIQCP5gH/Dvs7u1Rlv/CK2xELwRyOvrRZk79+5zuLpIqZimqHsZ7uvGroWz
      OQ9XMgSSqfPyxQtCHYOEHW6MjrOH2RNJ4nSezd7doQjri0tkDt0M9QyyurqAP9xCyOvB1ZEE
      oL29A4/qQJa8tHgEqpaXoPOY/axEb0drw9qrelsIJiYuHMeyrPcK3emJXzi+zcdjp0HPgb0n
      +ObGefeTYWrs7u6jWxCJJ/GpznN+tEk+V8If+LRFqFL6iLoaJuRWqFbKyA4XsiRSKBTw+a5u
      YSt39IT03qMLx3mXW0Gi508JJcYvHNvm03i3ALQc67t5bvXHef7tY776oz+kkktR1gTisTB6
      tcRRKks0nkDQ61RqZTTLQTziQ9M1LNMgdXyEIbnO/H848/o8ODxC9YcJ+1WK+QK5fIFIogWX
      InJ6csTBxhre/ruE3Aq7W2tEO4YJekSmZ17xB199TSGTomxIxCMhKpUSeq2GIElksjkEUSLZ
      0oZy8arlt8gcvmDj1f/a+MCA299uC+AKee9UUddqlIp5HG4f5fQ2C5vHlNO7LG0dM/3yJZIs
      UCxXWX75jINchb2VGXJ1i63NbUyjTrVukT9YZStVBqBaLoKksDg9TZ0af/fLbxAlmJmZ52hj
      id3TMj+w8jQ1DvZ32d3dpVjRKJ/uMbu2T+Zgne3jHE9/+wsW1nYRJAmHfBbHskuAbD6S9wpA
      lGQcLjcSGkfHWXr6eukd6iN3dEJbS4ytjS2KlRqK00t3TyfRoIvamUMh9VKWnb09UtkshdyZ
      AHKZFHu7u2QPUpSBRGsHLS3tiNQ5yhUZ7u8hFgl9z+1DQJIVZFlGFOD05Ih8sUAuXySdzeHy
      Rbg/dQev20M+dczkF1/hsDM/Nh/JBx4ZCwGolMtEokHWV1dZXVglkIxhiQqdnS2kjlPvvLOU
      S6OGEgQ86pufpdJZki0tqO+oqQm5nSyvbbKzd4D5uym5KBOPJ0gmk7hdCqFYkpA/QFtHF+3x
      MLLiQBQge7jO5qmGUC9Rq5ZY29ilcnrAzsnFndxsbj7vzgKZOoeHR+gWBMNRvKqTQjZNRReJ
      RYLUykVOcyWi8RhmvY7DraJXy4gOFa1axeVykDo+xun14VBcuJwypl7j8PgUn8+P26dSL9dR
      3S7KlTJul4vU8RGSw43H58Mhi9SqVWSHE0kUKJVKeDxuCtlTilWDWCyGVq+gqm6qpTypTB5B
      lIjFYtRqdVRFoGbJeFxKQ7JA+xu/opiavlAMePckON71xwTjYx8V5zpnXZotjp0GPQd2GvTm
      xrmyatCd9QWOTku4/VGGB7oQL2gZeHJ0RCSRuJSl7dLBFvu7FzfaetdCWMeDP0FSLi4um0/j
      ygSQypW4OzXF3vy3rJ/EaXVVWF7dIt7ZR8IrsL57TKFYJhbykc5VuHV7mNzRFjuHWboGhnAZ
      BQ5TeYoVndsjwxiAYJlsrS2RLmgM3b6Np0El0nqtQjV32pBYb3GzX8BNz5XlTSxdI5/LkSvr
      eJwyr2bmuTV2h92VWYq5NMdlgd6Yg/2CQNIjcpQpoXqD9Ha3sjg3T+5kj7ozTFtQYOe4wO7e
      HgCBSIKOhJ+5pdWr6prNNeLKBGBoNVbnnnFChKRfQVQcOGQZj+qkrpv4/QEUxUEw6D8bw5tV
      5uYWOUnn0PQaiDKhgB/F4cAyzjaI6NUC8/PLnOaK6Jp2VV2zuUZcmQBc3iB3v/oZvb4qc2v7
      BN0yj598S8Fw4lMdSKKAIJyVNwuieJY9MTQKxSIIIqIkIQpnZdKSKCBLEoIoYGhVisUygnQJ
      S8I2Nw47C3QOitk0gn7xN4phGK99Tb/DHY4jfKS73XXOujRbnGu/J/inQHS6ED3uH7/wRzB1
      HUmWccquD+5/sPnpaFoBZPY3mNs8wuWQ6Rq4TSxwvgdQr+VZ380x2NfRsLb81eLP+fnMv2xY
      vP/lP/0/cMrnrbC1uUyaVgC1co2e22O0Bc/cjNMHm6xsHyOg0NUZwnLGiKk664dZCof7IIu4
      Qq0ESPHixTaCJDHQ3bhNMTY3kyYuH9NZmH7J06dPOS1WWd8+5sGDB/gkC28wwNbGJqmDHRwe
      P4LiY+r+A6qZQyKtHfT2DdoPv825aGIByNwan+DevXuEvQ4QhDeVopIawkORjZMa7bHXfvfW
      67PjEGxnRJtz07QCcHlUNudnePr0KSe5Kh3JII8fP2X7MA1AZ3uYOm5kATJHOzx58oRIWw9O
      VwBFz7KyuX/FPbC5DlybNOjOxhKpbIlSXeThxCDPnzyld/whMZ/A86fL3L03+s77GmONWGuA
      peF3bREF8UJZoOucdmy2ONdGAKZpvi4nlhCE16XFkoSAhWm+/6SYRgggXSpyWi5fKAacrQMM
      JpIXLvy7zg9cs8Vp2izQ7/Prv/03uAMxCqUaD7/6Cvebzb8Coni5g/65w31+s7nWkFj/Xfwf
      IAr2KnWzcG0E4AklmLo7xebCc9LpNM+XFxAkkf7bd9lZekypAgO3eigUnPR2OHm1cMTU5PBV
      N9umyWnaSfDvU0gf8vTpU1JVB1LpkJrkxq8qrG3tUquZfPGHf0TI7cA0z9JBhmk7KNv8ONfm
      DeCLJJm6OwVA/ngTb8FBR2cYTXCxs5HHKYtUBQFdr1PIldDs59/mHFwbAXR0fFfa4It10lpY
      ZmPnkP7BIdrbz06KdHqiOJjjpOiltzPZsM92ywrtgdCF41iW9foIJ5tm4dpkgT4Ve0+wHedD
      NNUbIJs6wuGP4nZIaNUSmWKdePT937yFXA53IMBl51RerZ/wav34wnHaYz7+wf3+BrTIplE0
      lQDW5l5gRIZ4MNrDxsoiS4d5/vGf/TGnJ0eYioew10m5buJ2iFQ0C13XAaiVCxyf5kkkW6iX
      MuTKBi3JOI3Kji7tpPm/f7104TgPbrXZAmgymioLJHviiLVTdNOkUIWgWyG1s8rGUZ691TlS
      hSpzr6ZZXpynUDPY2dxCq5d4Pj2PJAoUTg+YXtzGKJ8ys7R51d2xuQY0lQAAoj4nB7sbuKLt
      iAIcH+1TymcpFArkygZdCZWVwxqJ4Nn+gGoxQyDaQWtrK0I1Q6J7kI7uXsr5S3JxsLlRNJ0A
      WjtbefpskY6WCADxZBu+QJCO7j4iHthJm4y0u9g+Ojs93uUNk0/vsLOzg6WGOVpfZHNtFU8w
      cpXdsLkmNFUWqFKp4FJVivk8Xp+fcrmEx+0mc3pC3ZSJBD1opohLFijXdCTBwqmqaJUi6VyJ
      aCyGVs6TrxjEYxFEoTFZoOfL+yxsvdsH9WNojXj5k7u9F45znbMuzRanqQRwGdhpUDvOh2ia
      LJBlaKwuL1KsCwzfvoV6jpMuqvlTipaLaMB9qdaI4vISrDXAaOsf/gcXj2HTUJpGACtzL3Ak
      BhkLOjGtGgcHBbLZDL293awvLyG4Qwz2dnCwucJhpkz/0DA7s89YzUlM3Z1E4TtrxFShztDt
      EbwNskaUazVIX3wIZNsgNh9NMwk+zWu0x4PIThUHVb559JxIso2tpRmC7QN49AybRzm8wSjd
      bSHm59dp6+hi4NYYHYnQD6wRO+MB5hdta0SbH6dpBCCJFrrxXQVbV/8t4iEf9bpFwKcSDPop
      Zo6ZW1zhNF9Cr2v8/vZfvZpnfn6ZTKGE3gAjK5ubT9MMgW4NdvP40SNUh8LAcDfyawe1tvY4
      Lx5/i2WajN0ZYSZ1SL4gIIgq7kCY46dz+NQ7yLKMIIoYWo1CQURUvFfcI5vrgJ0FOgdmLodY
      Kl64LVosfm2zJTc1zk/6BniXNyZYGIb5jp83D7qiIIfCnx5AkhAdDrAdq5uOSxWAVj3lt7+e
      xe1TCLT0kk/tce/u3Tf/fnR0RDwRYPrlKiNDrVQEL0HP+/Pt9XKOku4g5Fffe81lUP7LvyL/
      r37+yferDx8Q+/P/toEtsmkUlyoA09CItPYxcivJo0dPkanx/NkzyrrIVw8mKBSKxBMBAIxq
      kbLs4WTmOfm6hSE4mBrr4dG3r1BkgWjnIEm3QUWH41fzFDQLAyf3Jm+xMP2CUt1iYGSc3N4y
      qXyFROcAnYmLb2KxudlcchbIYnN5jqdPnuDwhhEcHianpmiRLHJAPpd7c6VeLVCqm9R0i7HJ
      KRIqpPIFXP4kDx4+JLW3gVGrUKrUqWoC43fvEZFrHB7to7viTI4OsLa2RiqVJhRvpz0WvNyu
      2dwILlkAAt2DI9x/8AVTYwNn9oacx7nQwrBMJEF8/Tfz7aYKvDaXMtlZX2F2aYNYLMa9L/8I
      n1jm25fzDe+Nzc3jUodAouwk4P/uI0LBs29lTyiIAwiGgoBEMORHUQW8ski+lOX5s2d4vGF6
      vA4ebU/zpHJC5+AosljGKztRQkFEwBsI4Y2209uWoqwZCILA+tIcmWKF1va+y+yazQ2h6dKg
      sy+eMTg+hUME6hmeLWaYuvPpFZSNskZ0XDA9J4jitU4X3tQ4TSMAo1aiZDrwOSUQxDMnaOv1
      4OcCVoKNEMD6XopUvvbJ9/e3hQn71Wv9oNzUOFe4Eqzz7d/9BtGl4vLHGQjrbFejjHZ8b/Iq
      COeepFxmNeg38/v8n3/76XOKv/hPvuLrsc4GtsimUVypAPJFnT/8YgqnLFJPnXlv7qzMsnta
      RjfgdleEg7qP4bjAq80ijtohxbqAGkgQkzMsHhsoeomhyS/ZPTggGouwMDdDvlAm3DHAQEf8
      6rpncy24wmI4F19/Pc7M00c8m13ld+Oww0yFhw/u0xtRKTkjlI532d87pDXpY3s/TyDgZ2dr
      HVOQuTU6wdhQJ/l8BdM0wQJBAFESODw6urqu2Vwbrk4ARpV8TWbqwQMqp0dvBCBbGoWqxmm+
      hNftJuiGzVSVWMiP3+ehpa2dyTsj70yl1ippyoaPob4upKapc7VpZq5uCCQq1HKbvNipcHty
      CodSp8Xlwh8bZ3FpjkB7PyHVgdrdhStvIokOxu8MsrKyQqy9h3CsFVQJWYkQM134nR043WEC
      zhMOcjK9HY07I2yiL07Q++nlF72t9op0s9I0WaDLwt4TbMf5EFfzBrBMNpYXSBcqBGNt9HW1
      NLVlrPnyf6M4/b9/0r1y75/g+tm/aHCLbBrFlQhgf/kVFXcHU4NhqtUqmBoLs7PUBJXRkSEO
      dzdIp/N0dCTZOzyhVq3j9aiUaiZjY7c53FjiOFumq38YoXjMYa5ETRO4PdRJKlOloyXMxtYu
      Pd1dDWmvoJexip/mDWpVcz9+kc2VcSVTxY10ieH2MBtLs8wtbXC0vogY7aEraLG8l2X25XOS
      3X0IlTySN05H2A2eGDGvRbpQJxCOEg17WFxcJ5c6IdzRT6u3Tqossr25jlbNk85Vr6JrNteM
      KxFAxClyUtLpHR5DK2aplMvsbCyydpDDrQjE27tJhHwgCLhUF5Kk4HY5EUUJs5ZnbmUb1eNB
      skwEUcLtciHLMqag0BZQmJlfo7Wn5yq6ZnPNuBIBDN65w/rLRzx5+gRR9dM+MIQbEwsR1eXA
      5TrLuEiyE4csIikOFFlEUZwoihPJqLK7d4ioKDhcLkQBZMWJIgm09/axtX9Ki//ik1abm8/N
      ygJZJoc7qxxXXdwZPCs9aEQWSC8cI9Tyn3Sv4PQi+s5Oq7nO2ZKbGqdpXCE+GsugWjdwOX/4
      TS+rIW63Rxv6URXZhyZ5Puler8OJ/S5qXq5cAKZW4unTVyCKxDr66Gk958NbLzK7esK9ke8d
      OCGIRGOxhrfxxf7OJ58T/B+NTTIUb9x5ZTaN5coFUD3dQ/e28sVoJwIwNzPD8MgQv/ybX/HV
      3//7rC7O0xr1srhxiNMTZGKkl9kXL9H0GhVnnPT+BktbR7i8YW73hnj0aBG3RyLefZvupL0t
      0ubDXHnFjDveT0LO8dtf/5q9kzyiWSN9uI/TFyCdOqBqulhZ2aJ/aAixfMLW1jZqvId7k3dQ
      HRJLq5sMDQ9hZg/I1nTi7X3cnRwnl9q/6q7ZXAOuXAC6ptHef5uvvpxiY2WJtqif6bUjRm51
      sTy7TDQZR7A0jo9PcIUSeB0iuq5j6DqGaYGpcXySwhdP4hLgvLuObWygCYZAplZhfnENw4Jb
      Y2P4PRDcr+ALxAiHvSRDXuLjE8yvbKC4fAQTHaQXZ5ldFQiHWmjtmGBhZQuH6sfhdBMKgijJ
      RMONK0CTRBFV+bSprCRe+XeMzQe4WWnQd2AXw9lxPsSVvwF+h2Ho1OsaiuJAkqUfHcSU8mkE
      Vwi34+wbVtd1JFm+lMHP2n6GnZNP8wYd70+QCNlGvc1KUwhAL2f45vkCoaAfUfEwPNiNrmlY
      CCiKjGmamIaBIEmYho4kK2SPd7FCKrLfgaLIZE9PCcdib+YGDofy2jfo4jxfOfrkPcH//D/7
      2hZAE9MUAlhcWGJk6gF+xcJCQNCrLC2tUMpnabs1xfr0rwlFk2xv79HRnqRsuGj3aKytLLFV
      z9E79oC93V0i0TAbq4sUS2VckQ5u9TRuU4zNzaQpZmiaCU5J4GB7nX/zr39BTdeoVqtYeoWj
      dAF3IMbY2DjJlgR3xu/gsDQEycHgrVHujg9zfHhWqmxZJpVKBd0wSaXTV9wrm+tAUwigvzPO
      s+lFWjr7CHqdZA72CLT10x4P8d5RjGWi6zr7O7v4w2fW5fVKBl0K09dhr7zanI+mGAL5Er1M
      yAfMzMwwOH6XeMjN6uICQrCTPn8QM+IEoLenFxDp6e1CVWB1YxlftJuuhJ+goweXJ0DMlyVr
      eBgdaNxB2Z2JAF+PdnzSvRG/u2HtsGk8dhr0HNhp0JsbpyneAPlMBjUQQPnIRaNM6gRvOIZy
      yQO58qNvyU9Pf/yNokj0v/mnjW+QTcNoCgFsrS7TMT6FltrhOFdnYLCPerlAPnNKXfLgMAqY
      zhBtsQC7W+tUTCd9vR1IoowgQKWQYX3niJ6+PgqpPVIFncHBPhSxQasCBweUf/Pbj79PFMEW
      QFPTFJPg3yE5PXQlPczMrrO7NkdZ8pNaf0lVCXO0vkLNNPCE4vjFMmu7KfbXN6hqZV7MLtPV
      0YZp6Ciqn46om9nFTytftvm8aIo3gAUIeomF+SWcqkSp7sIXVIlHgpiZMLFwiMqeQqWYYXF+
      DUEv40p6UYF6pYAvlMDr86HXiszMzyErMlXJXnyy+XGu9g2glZlfmCddMfAIBnVTRFVd7y1n
      0OpVkJw/2AXm9IaoZveZm1sgnc+jm2eb5G1szsPVZoEsk1KpjMOlosgStWoFS5CQJfGsqFmS
      sAwdUVIwdB1JlqhWyoiycnasqmkhKTKmrlGt1XGpKnq9iiXIyJKILMuNOSBjdZX6+sbH3ygI
      +P7sT9/89TpnS25qHDsNeg7sNOjNjfOTzwHWFqbJlDREh5fxsSGkBhWsXSb/z/wsP5/5+DTo
      n//xz5jqsA/GaGZ+cgHkKhr37k1xuPSEtZMaUnqJ06LOwO0xqrkjKsU8SqgDPbPDSb5Cz+AI
      AYfB/PwSmqhwa2iATCpPe0eMzY0d2lrCzM8vY8luhgfaOc5U6WwJs7G5S09PY6wRy5rGabn8
      0ffVDb0hn29zefzkk2C9VmJra5udkxIhr0I4miAadjI/v87h5hIlMUhLxEcoEiMW9rA4v8rq
      wgLtQ6MkvCL5Wo3jozRgsr+/jyQ7iScSmMUDDgoWO7+zRszb1og2P85PLgBBlFFVleG7XxIV
      T3m1eoTHF0CyNBRPkIHuViQtx6vlXdxeP5JgoBkCXtWB8HsLWxZwuL7IaQ38fi+6KdIWUHg1
      t0Zbz6efLGnz+fCTC8DrDxKPx/G5XQiyiqQV2N07QnY6cbrUs00skhPFqLCzd4CkOGhvi/D0
      28csru0ACoKe4dmzl1QNEZfXS/Zon1SujEMWae/tY/vglKT/4pMpm5vPtcgC5dPH5Koahztb
      DE0+xO+U3n2hZXK4vcpJTWVs8Kx6sxFZoONcjqppfPR9UY8X9/eyR9c5W3JT4zTFSvAbTJ2q
      Di7HD5vl9vkp1U4ZHJ14/8P/GsUT5nZH40qhAYKCgONT3B2uQYbrc+e9Alidf8FpSUd2eBm/
      cwvpHf+Xeq1ErmISCfp+9IO00jF/+Ys5/sk//pP3j7tKR8weStwb+G5Di1Y45pdPF/G7FdSQ
      xtjgBzI7gkgk2lhfUADHyjJMv/j4G3/2Z9DV3fD22DSO9wpg//iUB1//PZyyxMHGIlKkC7+Z
      YTsP9fQ+2XKd0Vt95Cqg6AWWNvYwcHJ3rIdvHj3G7XYTSPQy2JUAYHttl5HeINunNbo9BR49
      38KQHdzqCLK2c4glq9zrC7Gztoh2skJLzyjdLSEsQyPeNcid3gTfPPoWvRrh2YtXmILM6MQE
      C08fIblc4Axyd2zQtsSy+Sje+2V8Z2SY6aff8nx2hWgiyub6Fvv7R4TDAY5Pstx7+BBVsqjU
      NBwuN05FIru/Ra5mEEp0cu/uJPlsCgDLMjjKl4nGY+ytLoGpkS4LfHVvFNXjQZFEDvZ3qBsW
      HX3DfPnllxxur75py9bKLL/61d/hj7ZytLOKGu2kM+ZhffsAWfUzde8+jkqe2uX/vmxuGO8R
      gInDE+bBF19hFQ/RlDCqmeOoaBHxOghFY6jKd2PxufkF+m6N0dkSwXp9WLUAb7m+S1wAABKX
      SURBVMbAWimNLjjJ5mtUy3lMIJlsQRAE5mYXGRobpy0eBAssy0KrlUD6rqCtq/8WUZ8Th9OF
      JElk0ieUDZmWWBDLsjBNk7plIpkGtVodU9eoax8/abX5/Hj/EGhrhWypjj/Zh1sRSUbcbJeD
      iIJILHY2zpacbsIBE6e7lYXZGRwOL6rTSSQUBEEiHjmzJ6wUK4zdnSKkivgUgTJuYmf72Ons
      TDI3M4Pk9CO5fFiFNabnBEZGRl9/hodIQKSt9z7Liwv4uvuJFhbIF8tEWmQKp4c8f26S6B5A
      0Mqsb6XpDEscaT56WxrkDq3I8CkVptKHJ+w2V8+50qD1co4nz2cZv/8F3h/Jwvy0GLyaXuDO
      +Oh7r7CL4ew4H+JK1wF+93Caho4lSEiN2sL4js+4CHvrSxRODj7qnvbBMbyhH6Zjr/ODclPj
      XOk6wKtXL7l79x6p9Rfk/GP0RhXE1/aHoihiGCaGbqA4HQiAVq9jCSIORcbQNXTTOvtmNk0s
      LEwLREFEkgQM3USSG/O2OlyZY/oXf/lR9/zpf/nP3hKATfNxpQI4M8Sto+lnVZOzL6YZuXeX
      maePGBrq52++XaQ77sZ0JUm4imylauiVDEOTX5PfW6NYKiAG2pHTOxxoNXo6ujg8KfDF5CCP
      n83w5cN7V9k9m2vAlW6JzBzvs7i4yPrWPu8ah7V2D3BncgSzVGY/XeH+/Um6WiJYpkG5UkYz
      DFInaSwsxu9/TU9XFw6tyGlql0C8+6fujs015EoFEG3p5M6dOwz1nZ0PZho69WqJo3T2rWtd
      gkY6XyaVOqVeylKT/fR3naVSJcmJyykDAoP9Sf79N2v0djV+Rdjm5nGlQ6Cenj4AAi39uGUF
      cbiX1dVtJqYe4HT76Wu1AIWevjYCvh6Wl5YxJQeuQJzWepl01cH4cDeypeN8HdMTSJBIpnE1
      UNqhZDs9d+5/1D1uv31A33XgWlSDApzsbbJ1cILo9DMxOsQ7E0amwcLMCyLdo8QDZ3l7Ow1q
      x/kQVyqA/c0VjjJFAtEWetoTPzzQopplPWPS2xI+V6zU8THhePytMV0jBMDGOmxtnv/6ZBKG
      b7/14+v8oNzUOFc6BDo8yTE2OcH6i9+w7Q0TECsEAwEy6VMCzjqneYPepMnu5holXaG7u51y
      5ojdkzz9A4NQL6CbkK+YqA4FwbI42ts8s0Yc6m+cNeLpKax/hNOcKMFwYz7a5nK50klwtZBh
      YX6Ok4pM2COxunb2kC0vLPK7Sp6t5VdU5ABOI89Jvgqyi77OODMzixxtzPHbFyv4/F7WNzbA
      MlE8QTrjHmYWbGtEmx/nSt8ALm+QgcFB9pZfcZKtvPOaYtGgbyBOdjuDYdRZWVtCVCTyRUgm
      HExOTeFXz3RsaBWW5mZta0Sbc3O1b4BSjo2NTVKZIooiYdWKzM/PcXRaeHNNOKwy/WKa1Y0d
      TEunplu43epZoakgIHxvp5ZpauiGiOpyvuPTbGze5konwfVqhbpuICkOXA4F43UZs6LIyLKE
      YYJeK1M3YGd1nljfOCGXhW4KKLJ0VnYtyojC68muJFGrVd/YKzbKGrG+t4sjnz//DYEgtL59
      QN91nize1DhXOgRyuFS+n1yUFQfy99otS6AbGuurG3jC7cR8DgRB4F1d+91D7nSpjW9oLA5t
      7Y2Pa3PlvC2Aapb1U5Pe1jD7u1uE4+24HN8VldXKWcq6C6N8guJPEnC/W2m7C69w990h7ICD
      nV1iHe1UT3bJy2GkeoF4InGu7Ysrm9tMTN791P41BCvz/1E4/ptzX692/1fIvluX2CKbRvG2
      AOpF9lMGva1hUseHeCMJNmdmqWoagUQ3LT4Rw6gx9+IpdXeCiYlxaqkdDrMVBm6NoFJhbnGV
      04MDJnrvAJA+PibYEuHF4g5ffd3GwX4GKqc8XdqHeoWe2+P4hDKzi6sYopPx0dukDzbYP8mT
      L9fQqgXmF1YQnF5uD/exNj9Hta4hOlW0apmW7kFaIv5L+yVZRg1Lz53/etO2RLwunGMSbJLJ
      1xgdnyR1sEm9nCNb1uno6mTkziRBqcJe3mT8dg9Li6sszC8yMDpOX0fiuwhaib/9t39D3/gU
      kgBHR8dQy1GRg9yd7GVzeZf5+SUGRyfwKgbV0inbKZ3JyQn8bpn1pUVa+0dIug3W91NkC1VG
      7tyikClz5/Ygu/sfV6tvY/M73haALMPr8mTTNBEFAadLRZYkxO8vLAkCFmDoGsd7W0zPreD2
      uNERcSsygvBdaFHx8Ad/9CVr8/M/qPpUVTeiIiOYJiYSqkNCEEXMegXF40MUBQRBQNctVJeC
      S3Wh1esoDieyLOFyqWdnCdj+OzafyNsCUOMErBOePP6WuhzE7ZRR1bO6GlVVEWUHDkUiFk+w
      PveCguWhqyWMZYFLddEeD/Lo28dsH2ffeAm5VBWXL8Jg0sHafhZVVUFyoDolQEJVnbTF/Tx+
      /ITVrQMkXwIhu8Wz5y+omjKdPe3MPH3M3EaK7rb46/YIqKoThO/Snlo1x8vZFQqHGyzu2CfF
      2/w4TVMMlzk+oKQZbG/tMPXgIU65MUsUjUiDVstpFLF+7utFJYQgvb2J/jqnC29qnIakQavF
      DAVNIRZ6e/W1Wq3iOoejgjcQoJrOMjZxt2EPf6Mo6hZ16/w2K2EJXM3kHWDzXt4SwIuXL5mc
      mDh/BMtkYX6Z4bv3mXn5kuGJiR/k6Wfn57l398fTmIosISpufO4fruL+0Bqx9cPWiJfEL9b+
      LT+f+Zfnvv4vfvYvmGibusQW2TSKtwRQKpegnuXxizXqCIz0trC6uYspKEyNdPHLb2fxqzL+
      ZC9DXQm0cgbDFUKVRcqlMpap8+LZUzQk+obGALBMg8XZl+RLVVr6xigeLlMzJDKZDP6AHx0n
      D+72kjnJ45YqzC5t4QnGGL3V9w5rxPBra0SF0YlxFp5+i+RyYTmDTNnWiDYfybvHGpZOumjw
      5f1JVFXFqUikj/colusEEl3cfzBB6eRsklkp5XC5vmeOa5lUqjVC0SR+z+t1XkHA6/UiShLb
      mxuUdZGJiQnC4QATk1O4hTqmZVAu11hb22by/kPu3Op707jvWyMe7qyhRjrp+D1rRGc1j30m
      jM3H8t7BdjyeRBIFluYW6B4+sz0EzjwPhd/9AWTFiWF+b4Ioyty9/wAPRRZWdwDQy8fsZyXu
      jI7glM3vfcrb39cOWaSm6ei6/iZl+sYa0eFCliSymTRVU6YlFnpjjVgzTWTToFqrY+p1arY1
      os05eGsI1JJsAclFPHI2i+voamN5bgbF4cHpUomHHIBMLH5me6j6o1SW57CsLpItSUTLZGt9
      hXxFp2+4l/ypiKyGcbPL8rpGJBpDFs4e7Wg0hghEYnFEwUEsHiQZTzI7N40aTDDU14Hk9BAN
      iLT23mdlcRFfdz+R4gK5QplI8jtrxORra8TNrTQdYZkj3UtvsjH7cl2KSsB1/liyaJ9Oc11o
      SBp0f30Bw9dGR+zyyhHejW2NaMe5WJymWQf4AZaJboIsvT1C03UdSZLfOnxF0zRkRXlrUNUI
      AaRKGumSdq5rRUFgIPbuitTr/KDc1DjNdUTS7ygd8XLf4t5g65lder2GxZkl4vQ3v6Zz4gtC
      qowonu0JMEyTXDZLOBpF1zQM08LpdDSsRGInW+PVQelc18ri+wVg03w0pwC+h6VVWFlZo5jP
      0dp3i5PUMebmJnpAIq156I+KLO5X0SunRCJhttZXKJZKOMPt3Op5e1OKjc33aa4l13eg6xqV
      SgWjXiJT0mltaWN4eJhkWyel0yMOdvdp6zzbrGKZBqVSCU03SKXtWiCbH6dpBWCaJoZhcHq4
      T7C1j5ZoAABZFqhUqpiCQsihsVkQiHrOXmT1ahZdDtHbnvhQaBubNzTnEMgVQq0v8upVhsHb
      AxQ31nBGe4j6A6ht4yytrOEdGKJ7YBB/RUQA+np7cXkCJPxZ8pabsYHGeYN6JJPu0Pk22l/G
      GQc2l0dzZoEaiJ0GteN8iPc+GTtbmyTbO1EEnXS2SiT87hy/Xi9TrEHQ52Z9Y4Penp4f/Pvx
      3iZKoIWQ14lRzbN2WGCwu+0jugMnhzs4A0n86vs79T5rxEZQTR9wcrh7rmtFUaJl/ItLaIXN
      ZfBeAWytzZGpitzp8bK4csTXDzxsra0geGN0JIPksiVKhQyF0z0Wd8tMTk5wenqKUzDQHUG6
      Ws+GIFu724gnJaYmRlhbWGAlazDYmWRtZRHTGaK/qwW9WmBpdZvOvkFkrcDGwSmDA33IosXW
      2gpbuwfcuhtHqqfY3EvTNzCAVS+QyxfJFjUG+7uRlO+sEU/yGkPDAw2zRqwVchQOts91rSjJ
      tgCuEe/9wnQFWxBKx5S0s9qdjYWXmJ44taN1dlMZfvuLvyWvSbS0JOno6qUtEaZeziF5o5xu
      rb0pTBMVN6JRxbBM8oZEUBGw9BrBlm5cpV22sjWePJ2mp68HwSjx9OUynUkfL14tsTb3EtGf
      JBkNYNULPJ/fpKs9yrPn06R3V9jLWfjFAlvHRda+Z43YnfTZ1og25+KDI4bBgU6WV7YAKJZM
      kvEwra0xsrk88fZ+hnvbkSUJSZKRJRGHJ0gyGsSjKHzniyDQE3ezurGF03eWnSmkj1lYmGP3
      8JBCKYvijOJxe/CJVY5zBZZWd6nrNUpVaI0Fcbmc1Et5ArEWvP4IslUDyUFrSwK3x4OhnX2a
      oVVYnJ1lYWWTUuXdVos2Nt/nvZPgk1SKWDRC6nAPTfSgShoufwSznENXXNRLNaKxEHqtRK5i
      EQl6X98TJXeSwh2LogCpVIpwyM/Bzi7Btm4K6RM8koQjGkEsZyngRStmiCfiCJbG8UmRePys
      yjOTOsEXiVEtZJAdKrlilWQ0wNFxCq8qIbhCyHqRquWkVikQ8rsplC2CPiepbJ5YJIxpmpim
      +a4unhtD1xHeeYjTuxHld89VTNNEFC8+S7HjNC7Ojc8CNYKGnDFgx2nKOLYAzoFlWQ2pK7Lj
      NF8cWwA2nzVNWwphY/NT0JylEE2DxeL0E7JlA2cgweTt3o++/2hnnd/ObPBP/uHPECyNb37z
      DZYA7YN36Yz7fjwEYBl1ZmdmqNYNdEnl3u1Ovn06DcDQ+ENi/vOfh7C2ME2mVKdct/jywQQv
      H3+LbkG8e4S+tvOdx3bWKIvZZ39HUU7yYKSdb755AoJFz8hDWsPnLQe3+O0v/x0OT5hArI2O
      sIMnLxcAGL37gJDnfKvvlmUy+/wxVUuipWOAgFDgxcoulgkPv3yI6wM2O/Yb4ENoBdJVFw+/
      /AIje0jtEwaLwVgbna8P+svvLeHtmuDLr75kZ23h/EFEmVtjE0zdnaBeynGwtUzH7Qc8uDvK
      xsecXQb0Dt9hcnwMxaqTO9xEjg3wxVdfcLi18lFxiuldNGcQUdc43V4kMnCfr756yOby/PmD
      mFXKVZlESxvd7Ql2N1cZGH/AvdEeNrb2zh1Gy26TNQMkEq3Eo36W1rd5+PAhdzq8rB8VPniv
      LYAPoWtYihMBAYdo8fH77AWc3zMFq1bKqKobQXRgWefbYQYgCCL1Yobf/PYRQ6PjaLU6TqcT
      SXZi6Od3rAOol7I8ffoUXfJg6TVcLheCoGBxfkdry9CYXz/kVn/7635VUN0qiE4s6yPaIzi4
      OzWGZNX45vEL6pqOU1FQFBd1rXbuMOVsmhoiiqjx6PFLDMtCEgVUt4ty+cNeIbYAPoTTC+UM
      mlajaIioF3R7C8ZbON7foVY4Rnadf7hhGTWevVzg3hdfkwz7CIUjnBwfU8gc4fZFPqIFJjVT
      5sEXXxMSq+hqkMzJIfXyKZJy/v3cer2MXq8z/XKGjY01lECc4709qrlDHO7YR8Spg+IikWhB
      MOoE/H5O0hky6RMCgfP/fnyJDhRTI5FoRTBq+JwKp6Ua+4enJF+X0b8POwv0I2SP91jdPqSj
      b4jEO6wfP4hlsbo4w0E6j+rycHtigtTmAicFjdsjo6iO8ynKrJd5+uIlouRAUQOM3uplfWmO
      oq4wensYRTpv6tBka2WJVK6MLxynv6edg60VDk/LDN4ewef6uEpMQ69wcFygrSXK5vI8pxWL
      0bFRnOdsj2nU2VhdJVus0dk3QMTnZGVhnpqocnt4APmctVyWdTbX2j3O0Tt0i4AL5mfnkbxR
      hvs7ET+QErUFYPNZYw+BbD5rbAHYfNbYArD5rLEFYPNZY68E23w21Ktlqjr4vG4sXSNfKttv
      AJvPh1/+X/8T/+y//x+pGhbLj/+af/rn/9x+A9h8TigMtnrZPC6wsHHM/Tt99hvA5vNicmqE
      V88ekzcDhN2SLQCbz4tI1whrf/dzkkNjZ2e92CvBNp8LJ7sbKOE2snsbRDt7yRzu2AKw+byx
      h0A2nzX/PxGot+CNE7T7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Confirmed Countries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAZPklEQVR4nO3deXCch3nf8e+7J4DFHrhvAiBB4iZOkpIoW7J1WLJjjx1FHrlxmjR1krGn
      xx+djON22tG0aaduMplWaT2ddsaZOrar2HGlVmM5PiLrpHmAFAgQJO77voE9sLvvu+/bPyBS
      pABiZeyLBan3+fwFvHj3eZ93d394372eVQzDMBDComyH3YAQh0kCICxNAiAsTQIgPrSttVn+
      /b/5E77+9X/JpcG5D32566/9gB9fmjjAzvbPcdgNiPvHGz95iQef+RqfOFmOrql891vfpHtk
      kdZPfIE23zLLeWfwTr3BeslDTFx5hcHe6zQ/9fvM//1PuLLyBi79n9H/xvfYCNqprMzj+KNf
      wjb4d6jHnuBsbeGh7JMcAcSHthGOUlqUj6LYiAanWUyU881v/jumus8T11S0hEFCjaMldI53
      PMK//df/nPHBEZ58/Ame/cof88SZWpaWNvnaN77Bb/7Go7zz2ut0j63QUp13aPskARAfWltz
      HT/4/ne5dOE8M2s6waVhzv/qHBFHJk7FYKD3Cpd6bgDgcDhRbDYUA7I8mfT3XmZ2aYOCsioC
      WS48xQ1krF5gK7MSj9N+aPtkf/75558/tK2L+0pu6TGKMlQGJxY40dRGR20pfcNzPPNbv0l5
      5REWx0eoaWqnurqKPF8W3iwPmVleGlrbCc8O4copo7w4j+KSEhQUVkavc/TsZziSl3Vo+6Qc
      xgthuq5js8nBx8rW5sf5Vc84jz/2CC67cmh9HEoANE3D4ZDH3+Lwyb9hYWkSAGFpEgBhaRIA
      YWkSAGFpEgBhaYf6XKSma7w9+dq+L3+24lGcdpeJHQmrSTkAhmEQi8ZwZ2agbC8gEgmTkZWN
      FosQicaxOZx4PVkoyp0veKgJlVcGf7TvbZ8qfUgCIFKS8inQ2OA1Xn/tbWLv/R5ZX+DVV/4v
      a1sw1P0u08vLjA30MDCxlOqmhDBdykeAo7XNRIMqAIau0T88xYljRwCw2V3kFRWxEd0Au53b
      X3TWdR2D1F6ENgwDXddTqiGszdTHAHNjN3DllpJYHCAWj6NrMeZmZrDrdrIUHcMw7rjT6onU
      7ry6rksAREpSDMD2+X9cjRONRnF5crCtbjC7tIJRsILbkUFFZSXa0jTj6xscLS/YvpRh4HA4
      sBupvQ3WbrfLe4pESlK89+jMTo7j8GYzOz5JTU0N+cXlVJaX4PTksOWHqZER3Fle2huOmNOx
      ECZKMQB2qk/U7Vjq8eUA4CoowV9QktomhDhA8kKYsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmA
      sDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsLSUP08YjWwyOjbLicY6FDXK
      yNAQwZjO8dp6wgvjTK1s4nS4OVFfj8ctH18U95aUjwCryyuEVtfRADW6RX75MRqPFnFtYJSN
      lRCNnR0cLcliYHjGhHaFMFfK/5JLj1SzvrgGQIY3B9tWkCuXh6hqaGX1xhW6L3WhBoM0dDx0
      a4pDIpHAMAw0TUtp25qmoSpqqrsgLMzUcxJ1a4PzF3s42XmagMfNpttLa0cbieVphqamKGw6
      fuurkRwOBxqpBcDhcOB0Os1oXVhUigHQGOjtY2xqkqDDSYErzlZCYfhGL4Vl1WDEuHr5Mko0
      QuHRRnM6FsJEKQbAQW1zC7XNLbeWHG247c8lD6ZWXogDJk+DCkuTAAhLkwAIS5MACEuTAAhL
      kwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhLkwAIS5MACEuTAAhL2zMAL7zw
      AsFgcM8CM2MD/OzvfkkMUCPrvP3WW7z11lssb0bpv/QrznV1ce7tN5lc3DCzbyFMsedHIoPB
      IJOTkyQSCU6ePLnrOvmllZSthDGAuclRjtR3UOwO0z02iU9x09LRRniqn8WNMBT6D2IfhNi3
      pJ8Jnp+fZ3V1lZmZGZ5++ukdf3e7M1De+zmuqnhdTpxOF6qqosWCdHd1YUSjHG0ol7Eo4p6z
      ZwAeeeQRysrKKCkpYW5uLmmxQMDPwvIKrowwPp8fhxGjtbMdZW2WnokZSvPqZCyKuKfsGYCH
      H3741s8NDQ27rLE9FmUtGuFady9NDXWsj/QzEXHSWF/N8mSEvq4uHHYnjXW7XV6Iw5X0FCi8
      uY7dncXi7DSBojJ8We47Ll7b3ELtbUtq6ptv/VxSfYKSahO7FcJkSQPwnf/+X2k+3cIvXn8X
      d2kD3/jD30pHX0KkRdLXATLdCq/+5E0+8fjH0dRYOnoSIm2SHgGe+8dfpbd/giOl+RypakpH
      T0KkTdIAvPXqj+geW6S8poGJFZU/+cMvpqMvIdIi6SnQwMgUTz31BOgqW1tyCiQ+WpIG4Ld/
      73c5/8555hfW+b3nPpeOnoRIm6QBePdCF2cf/yTxtTl6boymoych0iZpAC5f6+PG+deo7TzL
      hctX0tGTEGmTNABf+MzjTIX8tJ0o4hMPnkpHT0KkTfLPAygKoeVxvvO9/8PU/FIaWhIifZI+
      DfrSKz+j7aFHaSj18soVCYD4aEl6BGipq6U418uLP3gZTU9HS0KkT9IjQENbJ97yYzQdP8b0
      mrz3Xny0JD0CvPjii8Q0HVtsjW//8Mfp6EmItEl6BHj0TD3/+c/+nEwjzANPfCkdPQmRNkkD
      0PH4F2n+WBRdsZPhkk9fiY+WpAFQFAV3RmY6ehEi7ZIG4MprL/Hy35+ntu0Ma1E3/+TLn7nr
      uqHVObqvj2FXdEqONRIZ72PdkQFbIUpqWqguyTG1eSFSlfRB8OvnLvOVr/wuPk8mcwsLe64b
      2lgjr6KGhppy1tY3sDmyaOnooLo8n0hE3kkq7j1JjwDPfOGzfP+7f8NG3MEzX/79Pdf1+AIM
      XR9izWZQdqyR4MoE3Ze7sKsaFTUVMhZF3HOSBmBiapazT36eluaGD3wgfqeFmUnKT5yk2B3i
      8tAs+W4vrZ3tGMvTXJuZo6zAL2NRxD0l6SlQ+4OP4Igu81f/7T/xrRd/uue61fWtxJfHGJhc
      pf1kLTmFfq53dTE8u8HJ+hrTmhbCLEmPAEPXuui+1o/TV0pH47E917U7M6htfH+EYtaRYxQd
      Sb3JX8cLF77JRmx9X5f9hyf/gMrAUZM7EveyuwcgobIejuEJFPLE07VkZ7lxZnjS2Nr+bMTW
      WI+u7euymp7aKZm4/9w9ALENzr07Rm5igcHpHgAKq5t46mPt6epNiAN398cAWfl8+pFTXB0c
      5/PPfol/8NlHuTEsH4kUHy17Pgb4f9/7Fj/96c8Zn1rAlohz8pPPpKsvIdJizwB87re/RkVt
      O3lFFTjsCq7M7HT1JURaJH0WaLT7HP97bJX8TAWl7Ax//I9+Ix19CZEWSQMwtRTiqcceJc+X
      wd++NZyOnu4pL/f/DePrI/u67KNVT9Ja3GlyR8JMSQPwxeeew+718/qrP+Zzn3osHT3dU5Yj
      i0xtTuzrsqH43t+vJg7f3QMQWeZb3/4+MTXx/rKJSU41VKahLSHS4+4ByMzjD/7oqxiGjmFs
      L7LZ7GlqS4j0uHsAFAWn08nPX/oOV0cWiUc2yTnxMF997sk0tifEwUr6GODxz/8OjxkG0YV+
      /vKVvnT0JETaJA3AL17+a66OLKLGIpSffDQNLQmRPkkD8PFPfYG65TUMwJ3lTUNLQqRP0gD8
      j7/4UzKPtODLcJBfWUdRvnyuV3x0JA1ATXUVwUABxV43Pr8cAcRHS9IA3BgZ5/gDddjtdmw2
      Ze+VjQT9vT0EYwmqaxsJTw8xH4ljqBrHm1vJy84wq28hTJE0AMWBbBZXN3Ak3Niz8/dcd2Vm
      FCVQQWdFHgDLEY2mzg6UtWn6x+fJa6oypWkhzJI0AGc//QzLG1sAeLx7fyJsdWmeua0NViev
      4S05AbEg3Ze6CK+s0H72k+mZCmGkUC+hoap31tON/RdMJBI76ol7S9IAjFzvpndsidDKNJQ9
      xL/6o/K7ruv151BaWMbxAgfn3h0lz+2ltaMNR3iF7uFh8lsbDn4qRJKztD3r2XfWsyn7L2i3
      22VqxT0u+dOgn36Wh3WD2OIgf/a3XXuuW1R5goXubi5O6dTUNROZHqT38mWIx6msazGtaSHM
      kjQAb7z6A3pHlzBQeOKRp/dcV7G7aOk4/f6CQBvVKbcoxMHZMwDXLr5D8yef5bHPuQivTNM3
      HUlXX0KkxZ6DsV796c+4+cynmygv/fyNdPQkRNrseQR46GQVf/XXP+Sx0/VcefMntLY8la6+
      PrJWt5ZZj+5vcJfP7SM/q9DkjqxtzwCc/ezvUHT9Kn1Dk3R86kucrJUz+lSdm3qTX47vPWLy
      bh4o/xjPNnzZ5I6sbc8AKDYHx5s6ON7Uka5+hEir5F+ULcRHmARAWJoEQFiaBEBYmgRAWFrS
      t0KIe1tMixLc5wAup82BP8Pan/CTANznri1e5fvXvr2vy1YFjvJPT3/d5I7uL3IKJCxNjgDi
      Dgk9QUjd3ymVgoLP7Te5o4MlARB3mA/P8he/+tN9XdZtz+A/PPZfTO7oYMkpkLA0848AhkE8
      HsfhcqNrceKqhmKzk+F2oaTw8UIhDoLpR4CtzSVe/tEPWduC/q6L9I+Ncf3qJQanls3elBAp
      M/UIYBgJ+gfHqT2+/R0CDkcm5TU1rI32ETcUjNsmLGz/nMIIhzvqmMPA2FEv1epm9rd7vRTq
      G7vUS7Fds/f3oJkagMWJATILq9CX+knoCTQ1wtBAP84EBPzbATAMA13Xge2xIalIJBIkbB+o
      kcL1ryf0nT2lcIPeHAHzwWX7ZejGjnqJVOqx8zYw4za5n5gaAJszi+jSLDOTM0Sy58h2eahv
      bEJbnGBgaYWq0u2BWYZh4HA4sBupbd5ut+NwfKBGCg8zdquXyuMWm822o97NsTD7odiUHfXs
      KXxpiaKws54jtS9B2XF73ONM7bagrIqCMjhWVY7Lm0942WDw6lXcHj8dTcfN3JQQpjiQuHoD
      2yMU3UUV5BZVHMQmhDCFvA4gLE0CICxNAiAs7f56yC7uO1fnL/Ni3//a12UrfJV87dS/uGNZ
      TIsytj6yr3o2xcaJvPo7lkkAxIHSjQTxRGxfl1X1naPlV7dW+J9XXthXPafNxX98/C/vWCan
      QMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0iQAwtIkAMLSJADC0sx9L5BhsBUJEdMM
      fD4vajRCeCuG3eHC6/Wk9K3rQhwEUwMQXltgeHYNt7HFuCsf59o0SmExifVFHLnV1FcVmbk5
      IVJmagA8ucWczClkdvQGcd2GzeYkJy+XzcgqNofj1siMm5MhUh2hcfuECTPsVi+VDnfvL7Ux
      Jjv72389Y7d6Kd4mO+ulUGy328Pk/sydC6RrXLtyCSO7mKbacm6cn2BxYRG74SCDxK2xKDfv
      GKneeXetkcpYFGO3eqncwcy9AXetZ8J1eGc9swOQ2tiW+yoAS5ODRDOLaKgoRNU0bA43RWVl
      JJanmVwPcqx8+0ue3x+LktoIDtPHotgOfiyKopg7FsVm8lgUmz2150VMHQOj7La/JveXUrUP
      yM4twqNEmZiYYG0jTGl1OYsTEwT1LNoajpq5KSFMYeoRIMuXR0ND3m1L/Pjzi83chBCmktcB
      hKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpUkAhKVJAISlSQCEpZn6Zrh4ZJ2L
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top 10 Death Cases' width='192'>
      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
      4A8/uo57Cvb9GqwWuDYA696DPZXguTW3Tsc3UL4RStfD1VOQXwTLd0BhAVw5D3t+DaoVLv7z
      Yh2XWFI2yvPNXL3TRtjs4s2mGgCi4Wk+v3CTiYSdnU4TA/19nLhxj2V1awCIRyIMT4xxs8NK
      5+g0f/vqVnLS/vREH+xqo6RqFYYfGjKzCJ7+mmIwgeKEQhd89d9hwAOrD8L413D6v0F+IyhG
      MBhT9/1bvoTefrB7YGIMbn8OCQs07odT/xVO/G9o2LNoByaWTjSpsLG+lpc2rSHg86CqSRKq
      isHs4J2XdrG92MrdkWmKSsr59c8OMDbURzSZxGS1kZeVx+719RQa4eGPV03TON0zxe7qzGdW
      9vmvAPWHIb8QHK/BnUtQtxMyimD1dshshPZ/g477sP19SATgxglY/y7sqIbOM9D4N+D+EszL
      obAYtCC094K5JzXEoP8CjHhh/TupsTzNR5/ZgYpnKBHh9K1OwvEkmxrquXzlKs5lq4mM9DLs
      j2KxO9mRDl9eaiamadQsq+Jc6wBNdeXsrsnn42+ukV9Zhnnay8fXO3D7A5xzDrK9Mo2aZTXP
      7NMfFtIPkFkEUyMLX0e8mObpBxif8pOXmT7vIFwtHkIxO55d+Z7Q0w9rfJITW05+XcrPfHjo
      /KN+Cic/SD+A0DkJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQ
      NQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJ
      gNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQ
      NQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJ
      gNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQ
      NQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJ
      gNA1CYDQNQmA0DUJgNA1CYDQNQmA0DXT8y6AeHEp9XtA0553MRZEAiCeWhwjKM+7FAsjVSCh
      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
      tb3wvxP8/wH7PJRMiwIMeQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 Recoveries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29eXRc133n+Xlb7Qv2fSOIjQS4kyIlSqKozZIlx5bSc5KeuKfteNqZxD05
      0+nuGU9mzqTH6STTSbfTTnp60clx3E7itDd5JMuybEumKJESSZEUCRLggoUAAWJfa69X9d6d
      P4o7sVQBVaiCUJ9zcEigXr33e1X3++69v/u7v58khBDkybNBkbNtQJ482SQvgDwbmrwA8mxo
      8gLIs6HJCyDPhiYvgDwbmrwA8mxo8gLIs6HJCyDPhiYvgDwbmrwA8mxo8gLIs6HJCyDPhiYv
      gDwbmrwA8mxo8gLIs6HJCyDPhiYvgDwbmrwA8mxo8gLIs6HJCyDPhiYvgDwbGjXbBuRJL0II
      TMMkFtYJzQaIR2MI00S1atg8DmxuO7KqIElStk3NCfIC+AQghCAejTF2eZixS0PMXJ8k4gst
      eKxms1BQXUxpcxXV2+qxe50bWgxSPjHW+kUIgR6M0Hu8m8FTPcQiekrvl2SZyq21tDyxDU9F
      4YYUQl4A6xQhBIOne7j084/RQ9FVnUuSZTbtb6HtmV1oVi1NFq4P8gJYh8SjMc7+8DijXdfT
      el53mZe9v34IT3lBWs+by+QFsM6IBiOc+PY7zA1PZ+T8FoeV/Z8/TFF9WUbOn2vk3aDriFhE
      58S3f5mxxg+gh6Kc+JtfMjcyk7Fr5BJ5AWSCWAz8fpibBd88hMOwyo5WmCbnXv2AueGpNBm5
      OLGwzqm/O0I0EMn4tbJNfgiUDmI6DA/DjWEYH4dgAEwz0eglKfGjWaC4CCqroLYeCgoSf08C
      IQQDp67S+frJDN/IvVRurWPff3/oE+0dygtgNQSD0N0FPVcgksLTUpahrBy27YDq6sTvSxDx
      hTjylz9etbdnJTz0+cNUbqld8+uuFfmFsJVgGHC5G859DNEVNErThLFRGB+D6hp46ECiR1gA
      IQS9x7uz0vgBLr99jorWGiT5k9kL5OcAqRIKwTu/gJMnVtb470YIGB6Cn/wY+vsWPCQW1rl+
      pnd111kFvrFZJnpHsnb9TPOJ6AFMIfBFwsyFw8xHwujxOAAWVcVrs1Ngt+O12Vc/lvXNJxr/
      7GwarL6LaAQ+OAZuN5Te634cvTRELJzaCm+6GTrbR1lz1SdyLrBuBSCEYCLg59L4KD1TE8xH
      wsQMY8FjNUXBa7PTUlrOlvJKSp2u1L/MYADe/jnMzaXB+gXQ9YS4nn0eioqAxD2OXx7KzPVS
      YLznBqZhoqhKtk1JO+tOALca/rFrvfRPTxI3zWXfEzMMpoIBpoIBTl2/RlNJGQc3babU6U5O
      CPEYvHc0c43/FqEQHP0lPP8i2GwYMYPZDPr8kyUeieEbnaGwtnTZYyPROGOzAcZnAswHo0Rj
      8URP7LJSXuiiosiJPYfCLdaVAGKGwYnBfk5dv4a+yNN+OeKmyeWJMfqnJzlQ38j+uk2oyhJP
      NiHgQieMrtE4eHYWPjoJjz6OHoouGtW51vjG5xYVQFSP09k/ztFzg1wanGLWH8YwH3QuKrJE
      gctGW10Jh3bWs6OpApslu01w3QggqEd5o7uT/un0LATphsF7/T2M+OZ4Ycs2HBbrwgfOzcHF
      C2m5ZtL09cLmJkLR3Pl6gjOBB/4WN0yOX7jOq+9dZnBsjuX86YYpmPaFOX5xiOMXh6gt8/DS
      Y1t4fEcdWpaGV+vCC+SPRvj++TNpa/x30zs1yQ86zxJYyKNz6+kfi6X9uktimnDuY+Lh7Lg+
      FyJ+X6j1+EyAP/qb9/nz759gIInGvxBDEz7+8ocn+dq3jjIy5U+PoSmS8wKIxGO83nWeUd98
      xq5xY36OH3efJ3rTe3SbgB8GrmXsuksyPoYYH8/OtRfg7vXSi9cm+N9feYezV0dXG+GBADr7
      E+c73zu2upOtgJwWgCkE7/Vd5fps5gOzBmameb+/B/Pub3RwIDEBzgZCoI1m3wN0C+XmWP1c
      zxh//DfvM+0Lp/X8c4EIf/y3x/jo8ghrGZyQ0wK4NjPFxzfWrhGcHR5kcPam10UIGMpuA3RF
      5mFFg4v0Y/c46B+Z5d9+9wOCkcw8FCJ6nK9/90N6h2dW3bMkS84KIGYYHO27eu8TOcMYQnC0
      7ypxw0is8qZ7wStFNBHHZc2NxSfF4+DPv38Cfyizi3KhaIyvf+9DAms0/8lZAfROTTDu9635
      dcd88/TPTEEknPhJglBUZ/nViNSRJXDlgMtckiV+0TPB9fHMzcPuZmQ6wN+/c3FNhkI5KQAh
      BOdHhrNzbeD8yDAiGEz6PT8+e44gEAyHGPMFMIQgGosxHwwwH9ERQCgSYtznJ24K9LiOPxxi
      OhRecoAjAUWlztXdUBowPE5+dm5gTa/5s1N9DE9m/gGYO47mu/BFItyYz/Cq6xIMzc0QsDlx
      p/i+qyPDzEUjnFMLITCMZC9mfGqST+17iLGRG0xHQkTlItzRAcakUmKhGR7b/hA1jsW/hsqm
      ci4NXkMssLC0VlyMGMTimejjFidumLx27ApfeWlfRmOQcrIHGPXPoxvx5Q/MENF4nLFAKk8f
      gSTijM7NMRnUGZ4ZRbU6ONjUxHONxVybDzA652MqGOH69BSaxc5jrW1sryhmTl/6Pp3FHsqa
      q1d3Q6tAtmpcydJX8cHFIUIZmnDfIicFMJZGn78Rj6/IozCWxPhfxHXG/QFmYnHscT8zcTf7
      aipQJDDjcaZDIU6N+Kmz6Izj4qG6SrQUn2aS1UrLEx1Zi8QMVRTjj60s7GS1BCMxOvszuxaS
      kwKYDScf/9J37gxg0P9R54Kv9576aEWOxFlZWnbLosCke3iIl/bsRdEKOVBjZx4bL2xpBQwu
      DQ3R3ryVqsJyHquwM2vYeKGjidbaZgo0qC+vocG5zCzX5aKwtpTa3ZtXcBerw1nsJlRZvObX
      vZsL/RMZPX9OzgEiKYQe+KeniMyO0XX8Q0Jxk5ZttVw5003MUNlx+AAAgcHLhF31lHl1+i/P
      snlbw7LnDSsK2B0QWnwyLKs2Dm/Zcvv3puo7560uqWBzRS02JSGixqq6B95vtS8zwVUU8HiR
      JIn25/YwfW2c4MzahAzIiszOlx/hw6OX1+R6i3F9fB5TCOQM9YA52QMYIrUJl62wnLrWNjoe
      3onm8OBx29BHLnLLa+eqrubGhU6me/qwl5ckZ4OqQvHKn37t1XW3G/+KcXvAmRCJxWFl768/
      jroWocQStD+/h6L6MiZmsxuNOu0LYxiZm4DnpAC0pcKTF0QCOeE+vX7yFM7NHWzZ04x5a+iq
      unFZ4oxMRygrTs6taFFUqKtP0Y40U19/zzCsoKqYh37jidthCRlBgtbDO2g8sAVEYmEqm0Si
      8YwuhuakAFwWW9LHFpRXADKlNW66TnRS3FjL8JmPGB4JYbeA++ZTvL6xBH/ciZrkU9lltUJd
      HVgXCZPONLICjfeN+yUobazkkS8+g9WV/GeULJIis+2FfbQ9uSOxCMHtfz6x5OQcoNiZ/OJP
      Q8cOAKrad1N18287y+8ab7e2gB6k62wfWx9/OnkbHC6w2aG5Ze33AwDU1kJB4YN/l6CorpQn
      vvIiZ3/4AZNp2rDuLHKz61cfSaREvNXqJbDbNFibBeAFsVnVjI3/IUcFUO0tQCKNYWCag53P
      P5e0K1G6aQOSBO3bEhtUwumNflwSVYVdu5f0Qtk8Dh7+wlPcuDDAlXfOE5ha2aqpZrfQ+PAW
      mh7d+sD8QgLKCpxrFgKxECVeO4qSuYFKTgqgzOXBZbXhj6YpNZ8kpfQU8djslDhdiV8cDtiz
      F469nx5bkqF9GxQWLXuYJEnUbN9E1dY6xi4PM3Sun6m+UeLLLK5JskRBdTE12zdRs3MTmt26
      4MNBkiQaKrycvpK9tCh15QUbrwewqirNpWWcHU5v+u9kaSktx6Le/GgkCZpaYGwMensyf/HK
      KtixM+m0iQCyqlDVUU9lex2GHmdyaIy+visMDvUzFZkkLMIYkoGsKngKvNQ1NeIqL8XqcSNZ
      5SV7xo7Gcn5w9FI67mxFbGvMbJbqnBQAwK7qOjpHhpPK+pBONEVhZ/V9qQBlGR5+JJEKMZOb
      4wuL4NDhxBAoBYQQjPhucG74NF1jF+idvEI4HsGwxMFy38E6HO8+Dt2gyCp2zUZTSSvtFdvZ
      VbOHSk/1PYLo2FSK22HJeBj0QrjslowLIAO5QQUi4seY6MYYv4g5M4A5NwiReYQeBNMAiwPJ
      4kL2VCEXbkIubUGp2I7kuZN8SQjBm5cu0Dl6I73mLcPOqlqea2tf+KkYjcLRI4lsbunG4YAX
      PwsuV9Jv0eNRTgwc50jvL+ib6iVurs5lqckam0uaOdz8DPvrH8GiWhFC8M03P+b141dXde6V
      8Kl9m/ntz+3NaBhI2gQgIvPEr71P7PIbGKPnIRogpWmsakMuqENteQ6t+Vmkwnr80Qj/9fSH
      C29YzwBuq41/vO9h3NYlXIzxGJw5nUiKm65nR0EBPHbogaxwixEzYrzX9w4/6XqNMf9oemy4
      jwp3FS+2f47HNh9m1qfzlT9/Ez2+djFBqiLzF7/7HNWlnoxeZ9UCMP1jxDq/R+ziq4hQmrI2
      qDbUhoNY9nyBXrWC1y6ex8jw5ghFknlp+y6aS+40QiEE0XicSDyGHjdQZAmLquLQLCgjI4n8
      PavZr6yq0LYVtu8A2/J+fSEEVycv87env0nf1BrMR4CmkhY+v/c3OflxdE3nAp852MKXPr0r
      40GAKxaA0EPo57+DfuZbEM5Q7L6soWw+zLmaz/DedCRju2MlJJ5sbmVXdR2DszN0jY5yaXyU
      odlZZkJB4qaJKQQSEoosYdM0qjxeGgsK2K7HaJ2ZpiAQSL5HsDugoQG2toPHm9SEN2bEeP3i
      q7x24QerHuqkiiZrfKr1cxw/7mF4IvmNQiulusTNn/72M7js909g0k/qAhACY6yTyDt/iDm5
      NoFSwurhfPWn+dC5C0NKr09YliS2llcRiuoc7etleG425Ym3W7Ow2+PhWbeH7YqCEvAncn0a
      Bkhy4knvdEBRccLLU14OFmvSnh5fZJ7/dPwbnL9xdiW3mDZKLM2MXN5OTM9cPJLTpvGHXzpM
      Y1VRKo6wFZOSAIQZJ9b5PaLH/wL0BzOFZRKBxGDRLo5Ufpag4kjLOQ3TZD4c5frMbFrWHGRJ
      Ykt5Bb++cze7KquQhUisJslKIrJzBd/oZGCCf//uv+HazMLp09caJV5CYPARzFh6voO7sVtV
      /td/eJBdzRVrtv8haQEIQyd6/C+Inf02pBitmU7mPY283/wlBmOWVQ2JpoNBBqZmCGUg65si
      yzze2MQXDzx8Z0FtBUwFJvh/3v4aI77s7I9eDClWQHzkMJFw+uKkitw2fu/XHsm42/N+khKA
      MHSiv/wjYhdfJRfy1IiCBsYe+7857TO4MZ/8kEWVZQodTrpHx7gyPp7xO6lwe/jdQ4fZUVWd
      8hPNF5nnz9751/RNr81kN1UKtBo8gee5POBflTNMAnY0uvnys5WUWCcxo+OIeABMHWQNSXUh
      W8tRHPXI9hokZQWp7Ze6/nICEKZB9NjXiZ35NrnQ+G8hl7Zh+9x/ZFZy0D89yfXZGaZDQSLx
      GMZNQaiyjE3VKHa6qCsoosDu4JUPjtE1lhnX4UJYVZWvPHqIJ1tak17Sjxkx/vK9f8vpobUt
      ipcqu2v2s7fo13j9WA/9o7MpC6GuIMwLW0fZXzOJIpbf6COpHhT3FizFj6K4mpGk1a/jLi0A
      IdDPfYfo0X+T1WHPYih1B7B/9j8gqQkXomGaROPx2wJQZBmbqiLLMtPBIH/w0zcykmB3OVRZ
      5suPPMoLW5ff2yuE4I2uH/H3Z7+9Rtatjt/Y8wWebnmR7muTHD0/SPfAJNO+MPEFNrGoikyh
      20ZrWZgDFd20lYxhVVaytiCjuFqwVn4Oxbl5VT3CkgIwRs4R+tFvgZ5519dKsTz0T7A88rtL
      fgjBaJQ/+OkbdI+vffLVW2iKwu898RSPb25a0tZr03187We/TzSeO5mhl8Kq2viD5/6EhqJN
      QCK94eRciInZAHOBKHosjkVT8LpslHk1vNH3kebeTgxxVoukYSl9GmvFC0jKyvZHLCoAoYcI
      fffzmFNrvwSeEooF+8uvoNbsXfBlU5h8/cgv+WXPlTU27EFcFit//JnP0lSycKGJmBHjz975
      Qy6OLbzBP1fZVrmTf/Hk/4GmLO4eNeMBItf/mvj8+bRfX3FvxV7/JWTNm/J7F3Wq6x//be43
      fgBDJ/renyEWeWL+4spljuRA4wcI6FG+cfQIwUVCO04PnVx3jR/gwuh5zg6dWvR1Mx4gfO3/
      zUjjBzD83YT6/wNmLPV9CwsKwPSPJVZ41wnmeBex7tcf+PtMKMhfn/wwh6bu0Dc1yWsXOx/I
      e6kbOj/p+v+yZNVqEfyk+zVixoPDGmHqRK7/NUYgs94sM3SN8OBfIYzU1nMWFEDs/N9DdO0T
      064G/cy3HugF/u70R/hSqeC+Rvyo89wDBT9mQzP0T+fGYtdK6JvqoWv03q2jQgii429l7Ml/
      P4b/EtGxH6eUVPcBAYjI/E1///pCzF0n3vfO7d8n/H7evpLdnDaLEdR1Xr+vF+if6iGX3Myp
      IhAc7XvnnnsyQwPoE2+tqR365DsYweR7mwcEEO9/FxHObl78lSGIdb0GQiCE4MddncTM7KT0
      S4YjPT3MhBI5d4QQHLt2NMsWrZ6Lo+eZu9l2hDCIjP4oPd6eVBBxoiOvIkRyCU3vE4AgdumN
      DFi1NhjDH2EGxjFMk3d7cnMF9Rb+aIRTgwMAzEfm6JnIzd4qFYJ6kEvjXQAYwV4Mf3buyQj2
      E/clF7p9jwBExJ/YzLJeMXSMoZN0jY0yvURKw1zhvb7eRDKv2QECaxxcmCm6xy4ghCA2fQwy
      UjYkGUxi0+8nNRe4RwDGWCfE1jD9RwaID53i3I3cCh5bjIGZKeYj4dtPzU8CPZNXiMfmifuy
      e0/xwGVEfHlHzn0CuMB6nogBGKPn1zTWZzXMRyIMzc4yPJc71SBXy2x4Bt/8laQaX0YxQhih
      wWUPu0cA5uxApsxZM+LzN7gxt34m8YOz04xnaF9vNghEA8zN5MYw2gwtX+P5PgEsr5h0MOrL
      3Ja+sCkzu5ZZ3G5SusK4/97JUQLRzKQ8L3ZkI7e/YGI2NyIIjOjyxTXumwSnJwVe77V5zswu
      PgE6MxQmGIwxHk7/JCkgrXyTxqNt23m6sYlPt++gzZvcjqdSbwFWoL2iYkXXnAn50NMU+KZq
      xTzX9iIPNzxOjdNLa1nb7dc01UOJPdWqZysjkCOLqCK+vGPh3oDqdEZ9CvjRmRk0i8qQ3+Sf
      POzlzTNzmJrCbEwQ9kUYtjqJ+MKcHdWJIvPf7XCz2pT6EWnl+1V1PczH/b3U1DRh0xSeatuG
      Q5M409dDTVk1HpuVG+PXMWwFbCouxxOboD9m4dIqCvoFopGU6yEsRnvVDk73/5wpPeF737l5
      Ew83KDhknQ/HblDtEFSWP0KZFES1FnKi96dUle2h0OYmEuzn7Hh/WuyIGTEg1RT3GSCJNYh7
      ewAzvdXQNJvKC9s8tHkUwqEootDJ53Z4KLVLCBLTbcMQSBKMzehE0zD/llexPclicfDw5iZq
      7Arz0TiqDL/o6mQsEkOSIG6a1Hg99IyNIIwgr1+5vurdSYospy0FuU2WCN+1+Dfju8aHA+8R
      NC0gSUgSGEaIM9eP0TUzjtdqQZYkTDNOhSd9hfikNCcuWDHy8g/DeyyVLOnf6Hw707ZVITAX
      JRqNM3dXSz8zHuNTW1yU2NLzodlY+fxC10N80NfL+Skfmwq8RKJhIia4nEUo+iyXp2YRSGxv
      aKLneh/pGLi4rHYUOT0ZKvvnp9hV3owi23BpS8fHC0DTvBQpMS5M9KY175JVs6ftXKtBUpaf
      l93zyUsWV1qcoKXFdrxWidKqxJfQWmXFqqgcrFZ5d1Dn4Xo7LrtEvSJRV2/j3b4w+5ocWNLw
      KPSIMDIrW4IZmfezt7GJiB7mgxsjFLkSoQq+wBQ+Ty3FSoCuqQAVRVZqyuuw+6YYmBxHB65M
      rKyYW7m7kKmAjWAaFsImZ86jFrawp2Y7PWOd9E31AtA/dRU9GmDIEBihOCETYr5rSPFZ4loJ
      m1xOLoynb+LqddWCyP5KvGwrX/aYewXgqYLp3lVf2Ou5mdDImvi3qijxb0OFnYa75op2AKuV
      54vSl11AkwSlDhvjodSjQIenxxievvP7qO/mZE6YXLxxx0M2GniwsY76Vzbxay6tZHiugOk0
      ZdUbnb3K6C0vsJ74DCYCiZ1w03GA4M2XJgEITKa3+IciKZSX7oWJ7AtAcTQse8w94w65cPk3
      5DqKvZD6kpV5ZNYaWZKoLyyiwlO1/MHrBLfNg7dgC5K6Nh6nRVHsqQtAKWnJlDlrhlLawraq
      9dGgip1OqrwF1BduyrYpaaPUVYbTUYHi3rL8wRlEdbYgqctvkbxXAFW7kpo55zJKzUPsrnmw
      Jm8usqW8ArumsaWiHekTUo6urawdWZKxFD9K9mowSmjFjyblobvXC1RQm5gHrFckGbV2H/VF
      RTQWJ1cPOJs80dSCJElUeaopysqqbfppr9wOgOJqQXE1Z8UG2VGP6ulI7ti7f5EkGa3lUxkx
      ai2QvLXI5R1IwDOtbcsen02qPF62VSV873bNwfaqXVm2aPWUOEtpKkk0eklSsVZ+DlaxMLki
      JBVb5UtISY5kHuij1Nbn1+0wSGt7AUlWkCSJZ9u2UGDPDX/0QrzQ3oHTkvCOSZLEI5sez7JF
      q2dP7UPYtTtrSYqzCUvpU2tqg1b8WErzjwcEIBc3odQ+lFaj1gTNgdb+2du/2jUL/2BHbj5V
      Kz1enmq5t4eq8FSirtMHDyRqCBxqeuqecbckSVgrXkRxb10TGxRnE7aql1JaiX7gSEmSsOz9
      Ikg5EMuRAlrbi8j3Lee/2L6NhqLcGltLksT/sG8/nvsqwhQ6ithZvTtLVq2eXTV7qVvAjS4p
      tkTSqiRckqtBttVgb/gyUoqp8xeUilKzD6XhYFoMWxOsnoRo78OiqvzTxw5hUXKnGObjm5s4
      uKnxgb/LksxnOl5GW4e9gKZovNjxEvIiT15Z8+Jo/J9RXJlxjSrOJhybfxfZsnxt5ftZ0GJJ
      VrA++ntI9sJVG5dxJBnr/i8jF9Qu+PLWikq+sP8A1hRLj2aC5tIyfuuRR1GVhXvXzSXNPNny
      7BpbtXqebnmOxuKmJY9JiOArWMqeTco/nwyS6kErObzixg/LJMeNXz9B+LV/CvHcSy51C23n
      b2B94qvL+nw/uNbPn77zc3QjO6lS9tbW8dWnP4XDsnTdq5ih8++O/AmdIx+vkWWrY2f1Hv7Z
      E19dMi/o/QgjjD51FH3qlwg99SKDklaIpeQQlpLDSKoz5fffc67l0qNHP/or9ON/QS7uFZYr
      d+J4+ZWko1jf6+vhG0ePEM5AVZileKiugX9++CncSVSChERZpK+99ftpiw/KFMXOUv7Vc39M
      sfPBZL9CCGKGgW4YhPQowZhOJJao3WAKgSLLaETRwlexhTrR9CE0IkgLhjHKSKoTxbEJtXAf
      qmcbsrryyjt3s3yBDCNG9MgfEbvwg7RcMF3IhQ3YX34FyVWGCM9hTlzCnOnDnBtCRP2JXku1
      IVndyAW1yMWbkUu30jkT4OtH32UqmPk0JPJNd+yXH34Uq6IQ1+PEIjp6MEo8mhChatWwOG1o
      NguqVb3dk10YOc+fv/snRHK097WpNv754d+/vfBlCkE4pjPqm2d4bpZR3zyz4RBBPZpUBR+X
      KnBJfkosOmV2iRqPk0JnAZrFi2wpRraW3UyBnt4V8+RKJMUjRH72fxK/urZp7hZD8lRhe+Zr
      mLPXiF95C2OiO7l0LpodpaydmeqD/OdRjY+ngxnr1zw2G1/Yu599rjImrt5gemCcwJSfaDD8
      YGcqgc3toLC2hNLGCspba7B7HXw4eJz/fPwbxNO8UWm1qLLK7zz6v7C//iBBXad3aoLLE2OM
      +OaIxtNna5HDyebiUraUV1Du9qLK6Q+tSL5IXjxC9MifZL1OmGQvRKncQXzkY1jFHmbD6uED
      x26+a7QwGU+fy1eVZfZX1fGUVkr48hi+8dS3S8qqQunmChof2UKX0cW3Tr9yc5th9tEUC7+5
      /3+itWwPHw0N0jM1ntZGvxjlbg+7qmrZWlGFRVHSVicstTKpRgz99DfRT74CRhYqmMhqou7u
      Amm4V0rYUsix0md5y6hnxB/AXOHOKJumsb+mnn2mm9j5ESK+UFrsK2msINJh8J3+bxPOctIy
      u+bgpe1fJGoU0zs1seLPajV4bXb21tazvaoGq6KuWggrKpQdHzpB5O2vIebXKqGTlKixm8E6
      ZVLzc/Rv/U0+HJvm/I0bjMzP3a4QvxCKLOO0WNhaXsneujp2FpRx7afnmOpPfxkmWZXROpy8
      rb7DiD87We+KHBW0V36a+YiWE+6QAruDw02ttJSWJ118cCFSF8BNRNSPfuqv0M/9XQbdpBJS
      YQMiOLkmhbnlsnbsn/n3SO4K5iNhRn0+xv0+AtEokVgMVVawWzSKHE4qPR7K3R5UWWaqf4zT
      330fPZjZCauzzktv8zWO3XgPc42KFkqSTJVnGyXufZgi96IDmkrKeLq5jQK7Y0W9wYoFcAtz
      7jr62W8T634tfXlFJRmleg9q24vop7+JmFubhF0AclEj9pdfQXYvv6tMCMFo93XOfO8YZnxt
      1hc8FQWUfLqW713+ToZrCEtUexso9xwgZnoyeJ3VY9c0nmvroLW0PGURrFoAtzBD08Sv/pzY
      pR9jjneBSL1BSK4K1Nbnbsb1VBF69cuY4xfTYV5KyBXbcbz8X5Csi2/rE0Iw2TPCyb89grlA
      SdBM4ikv4OD/+CzdM128fvGHXJm4hEjTwERCorV8K3trn+LarJSTFXYWQgL21tbzxObWRVfa
      F3xfugRwB4EIzxEfPoMx1ok5O4CYG0REfAg9CGYcyeIEiwvZU4lc2IBc2opSs+0wbScAABGy
      SURBVA+5sAFJkhHCJPLz/4t4d/ZqZmntL2N95l8tGlnoG5/j/f/y09v+/LWmdHMFB77wNLIs
      c2NuiGPXjvLR4AlGfCubI1R7a9hX9zAHGw8R1DVev3g+pwuMLEZTSRm/0r4j6dCXDAjgXpI5
      /f3dVuzqz4i8+S+zW5xbkrG98O/Qmp954KV4NMb7r7yFbyy7SXhbn9xB65PbkSTp9uc8G57h
      0ngXQ7ODjPpuMBmYwB/13XajaooFt9VNqauMSk81dYX1bClvp8CeiKXpHB3mrctdWfHwpIsa
      byEvb9+F07J8tpGMCyBVRMRH8Du/toYepsWRCupw/sP/hmS7MwYWQnD57XNcfTe96URWgqTI
      HPqdF/BWLBy0KIS4MzS69TXffNhISPc8eIQQnB8Z5q3LF3PCy7NaKtwefm3nvmVjr3Ikh90d
      Yl2v5kTjh0ThvVj3a/f8LTjto+94d5YsuhdhmHS9eRqxSKiBJEnIkpz4kZXEz83f72/8VyfH
      +fmVrk9E4wcY8/t47eI59GUW6XJKAEIPoZ/7+2ybcQ/6ue8g9DvF7HqPdWPEcmdsPNk3yvTg
      yrLS3WJobpY3ujvTmh4xFxiYnebNSxcwlohFyikBGEMnEb6RbJtxD2J+GGP4IwAi/jDD55cv
      urDW9B2/lFJt3LvxRyO80d2ZtTDxTHNpYoxT1wcWfT2nBBC7+ha5F3YtiF39GQCjXYMYem4F
      pgFM9IwQ9ae+BhM3TX52uYv5yPquC7ccx671cH124X0HOSMAYegYN85m24wFMW6cxozpjHZd
      z7YpC2LGDcaupO7+PDs8SM/U6oZP64G4afLmpQtEFtgHkjMCMOeGEKHp5Q/MAiI4TXSsj7mR
      1HcvrRVT/WMpDYNmwyE+GOjLoEW5xWL3mzMCEPPDaY3yTCtGFF9fd9YWvZJhfmQm6RVpUwje
      67u65jvjss2Z4UHG78vinTMCMJeZ/M7MRfnB2Tl+dG6es2NrLxRff25Xcg/NBTFiyc1PhmZn
      uDyR/qjVXCdumhzpvXJPT5n9VAk3EcvUJzvaF+a5nV5cSmLVc2o6wlv9EVRV5sWtDn523o9P
      VdljFVxBYmpap7pQY0YX/KPdbo5cCDAdMdjR6mHwqp+ITSakw6PVKsNo7C2At6/Heb5l4Wxy
      4blU6qfZaHpyM6GJAP6RCfwzmZ9kmnEDPRjBYl969dMUJieu96/rld7VMDA7zfD8HLUFicXD
      nBEA5tLdcVQSOBC83TnPoFApicbYXGVjdixE17yJX8j8411uPj7v59AON91dfva0u/jgsh/D
      ALtNQouanBuJUaoqPNfh5uzVeVyFNoa6AhRGZepKFk+lGI+l0mAkQhNTjFxMlOms3L4Zi0Nl
      ovs6BXXlaHaNqa5rFHU0Y4bDqLLB6JUJKrdWE53zEdJVCksdmNEww93J1xCORZYf0tyYn2Ng
      JjfnWmuBEIITg/3UeHcnFgqzbdAtpGXqSlVoEpd9JodbXchCUGiViJoS1eV26mwSdYUa8u2C
      ZPe+1zcdwm+zcvhWGaabP5IEyDINLomTkwZNBYt/HGaK5Vc9NeVUddTj8lqxum2MnOkhEooR
      jxmgWvGU2BGRMCMXBtCFguTwMnS2n/H+KYrri5gbmUEtLkypbNRycwAhBB9dH9iwT/9b9E9P
      MhFI1GbOHQHYlk6W9OgWD7MTYd64EuKxBjsHtrjRfTrjIYHLKtNQnMhLU1luwQk0lFmwAJtL
      rBQUO1B9ES7NmbQVq2wqt6AA1UVWbDK0lWhoNhWrvHhrU5NMaXIL3/A4IxcHCcxH0f1BYjET
      Z1UZ5twM00Mzt6tkQuI/kq5jtSkomophCGQZ5gcnSGV5SrUs3aHPRcJcm8ntVCtrgSkEnSMJ
      t3HODIEkby2JR/PCTydVlTnYem98/rMdd4LU3NZEDHhVZeJJ7SxL/NtUmvj36Y67N3Ukbru2
      xIYRM3hzIMLhtqU2fUhYS6pg+cLjN4nhn7yzg81/c2N8cGwaV3MFclQnOBlFiib+HpiYIx7x
      U9paQ2xujtGLQ5Q1FBMPBzFTeFhr9qUDv65Ojn9iV3xTpXt8lCeb23JHALK3FjQHxNJYrDsJ
      FE3hV3cXLH2QxYlrUxt0JesJiuMfv+ORuSUAoUcZ67prd9t8wpsVuPn63a+NXExtC6hmtyw5
      ATaF4MoG9PwsRiimMzg7k0NDIFcZcmFuljaSC+vxbspOtZNkcRa5kdXFd0L5IuHb4948Cfqm
      JnJIAJKE2vBYts1YELXhMRyFLuwFq8tDmUmK6suQlcW/zhvzs8Tyw5976J+Zyh0BAKjNz4Ky
      9Dh2zVEsqM3PoFhUiurKsm3NopQ1VS75+tBcdnev5SIzoWBuCUAubUGpyq0iEUrNXuSSZiRJ
      omZHbpYztXkcFG9aPIuFEIJR38qz6K0GI6anNJFfDWZMJ+RPLd1lTglAkuTcqk4jK1j2fPH2
      xviSxnIcRVkuAL0ANTs2oWiLf2aReAx/NLXsDkZwnP6LifCUa2fPod/XinXfFD5fhNHLXcwH
      Fw9Nmbh0gltJ8qb7L3H+3fe48N5J9HiM3lMLZ/zoPXluRUHxV08cZ2JkMqX35owX6BZK3QHU
      xkPE+36ZbVNQGw/fUy9NtWg0PtzGxZ98lEWr7kXRVBoPtC2ZDyek6wuGAi+JESUwn/BkBefm
      MdH5+I230dwuXJWbqfBGiCgaA6dOY14bY+uB/cxcPU8gGKNmx15sxhy9Xf2EpofZsjlxyuu9
      g7QffhpNVQhNDHLpww+JSNDcXMrV81eJCQtbdtRz6cMThARsaa+l62Qnss3F1gPb6Tn2ITHT
      wuZH9uG0acwP9zHQM4zqKKC+sYRrl/vZ5ChP6TZzqgeAm9VpHvs9JNsyrslM22EvxProP0OS
      732y1u1uwlmcO4miNh1oxeZduj5CQI+mYbujga2wko5DhwhNX8eI+olEJSraWmh95CAuMY2f
      Alr3dTB84QrXewZoP/QYDS01t8/Quns73UePcuHDc9hLqqht20rHvg40pxeHXSPYe4Wwo4La
      1ja2HdjJQGcXtbv3UubUGRufxTcXpWJLC3Zr4rk91HeDjkOHKHbGCAgv9R1baduzNaVGnXMC
      gETuf+sTXwU5S0MhWcX6xFeRC+sfeEmzaXQ8vycLRj2Io8BJyxPbls2GFtRXED1rsSN0381C
      F3HURB6Jmy/euZ4sSYmME5LEzGAfg93XKKot59Y23DvhGQKLp5QdTz1JkTLF5HzCIyWE4OrJ
      U5S176Z5WwOmeTMNrBBIhs71ixeZiyq43QXsef4Q4esXGBqavX1OUwgMw0BaYer0nBQAgNr2
      aSx7f5N0F0RYHgnLvi8l6iUvQnlbDQ0PtayhTQ8iyRK7fvUgmm15r1nKwx9AtpZQXBTnwtH3
      8dY2oUgKntJE7iBvaQmqowinQ6OyuZEbZ08RkEpoaq5Aj0SRVZX65jq6jh5j1ie4FaExcfUi
      F48ew6dUUlpoo7TSSveZbmo21dF/+hTTAROrAhX1hXSd7KRh7z5UM0Y8ZqIQo/fsWXwRGyUl
      iXnYpi2buXTsfQLCS2mxA29pScr3mXN5ge5GmHGiR/+U2LnvrNEVJbRdv4H18X+BJC89PYrr
      MT745i+YHcpObM3W53bT9Gh7UrkwT12/xjs9ub2fIVvkbA8AIMkq1kP/G5YDv5N5z5CkYHn4
      K1gf/5fLNn5ITIj3f/5JXKXpqXiYCo2PbEm68UNy2fk2KjktALg5KT7w24m05Y7MFL2WHMXY
      f+UbWPf/1gOT3qWwumwc/NKzeKtWVqJzJTQ93kHHp/emlAVZzkBpoU8K6+OTkSSUxidwfP6H
      aO0vpa83kBS0jpdx/KNXUTYdup02MBVsLjsHv/QsVR0PTpjTiaIp7PjsAbY+uyvlFOCWNXIm
      zFzrJxhOfcIdD84xP5+dLNQ5PQdYCCEE5nQP+ulvEe/9xcpqEmgO1Oansez5InJxU1rqTQkh
      GPyoh+5ffEwslN7yUYW1Jez4lQN4KgtXZOvVyXF+2JnhlDMiRudbb6KUbaV9TzPz01MExkax
      llQRnhjGXduM12tj7HI3ckElZWVegn4/vokZyurKCMWtuB0Sg+c6cdVsxqFGGeoZorpjGy5n
      apuRUmHdCeAWQgiIzBHrO4Ix+AHGWCfCP7ZwRmlJRnJXolRsQ6l/BG3zk2Dzpq3Q2t02Rf1h
      rrzbydDZ/qQ3qS+Gs8hN0+Pt1O3ejJxCzvv7GZmf47+e/nBVtixHaKSP8YiL8HAPrY89ysc/
      e5Pm/QfpPvI27YefZLCzh/IiQdBRjzHWTUHrbrrefJVNj32aSuc8Pf4ylOGPKd/xEIowkMw4
      mt3GlRPn2PbkwYz5AnNuJThZJEkCeyGWjpcR7S+BEYNYEHP+BkIP3KkTbHEje6sTew0ULe2N
      /n6bbB4H2z+zn+bHtzF0tpcbFwbwTyQfhyOrCiWN5dTubKRiS92yu7ySwWGxoClKRqNBR3r7
      mY1qhCdHKZsNY/EW4y304q2swlPoRlNhZmiKoCOKFAphCYQpb99O3aYKYhPzgCAm7BQUJApg
      Xz12hKihMjcRxAQyNYhbtwK4G0mSQLWAakGxL5wqfK3tcRQ4aX1yB82PdxCcDTDVP8b86AzB
      aT96KHq7d1A0FYvDiqvUS+nmSorrS7E4bEhLbM9MFafFil3TMicAESMiudn7zAHi8ze40rtw
      du/KLY0MDPtxlLko8FiJzN49BZUoKFC4fOos7vJKIuEozpJC/BOZzaixbodA6xUhBMIwb7sm
      JVlCkuWM9kxCCP7buY8ylw1CmMTjJqqmJqqIxgyQQNVU4rEYqqZixAxkVUEPhxAoWO1WTMNA
      UVWEaWAKCVmGaDCIYrUjCwM9ZqJZVBRNy9gQKC+ADcJ7fVc5voFSISaDIsvrxA2aZ9XUFq7d
      WsV6odpTkBfARqHc7cG5TLmgjUZjcUleABsFu6pRW5DvBe6mubQ8L4CNgiRJbClfet/wRqLc
      5abY4cwLYCPRUFiMJ8UMd59UtlfV5FZu0DyZx6ZpdFRUZ9uMrGNTNbaWVwHrJRguT9rYWV2L
      XdOybUZW2Vlde7t+cF4AGwyP1bahewGLorK39k7kbl4AGwxJkthbW79he4HdNbW4rXfmQXkB
      bEC8NjsP12/OthlrzkL3nRfABkSSJHbV1FLhzp30LplGAp5oasV2X8+XF8AGxaKoPN2yBS1b
      qWfWmJbSctrKHkwfmRfABqbGW8ijjU3ZNiPjFNodfKqtPZHD6D7yAtjASJLEvtoGWkpTSye4
      ntBkhRe2bsNpWXhbZV4AGxxFlnm+reMTOR+QJYmnW7YsGQOVF0AeHBYLL2/fTaF96Ryj6wkJ
      eKyxmR1VNUselxdAHiDhIvwHO/bc4yNfr0jA/vpNPFzfuOxOu/yOsDz3MBsK8v3zZ5gOrW2x
      wnQhSxKPNTYn1fghL4A8CxCMRvl+55msVZVZKYos82zLVnbcjPRMhrwA8ixIzDB4p+cSH99Y
      OMNDruG12Xlx63bqUtz6mRdAnkURQnBpfJSfXu5CN1aX5CuTNJeU8fyWDhyaJeXsGnkB5FkS
      IQT+aIR3ei5zOccKbbutNp7Y3MLWiqoFF7mSIS+APEkhhKB/ZoojPZeZDKZWxT7dqLLMzupa
      DjY0YddWl+0vL4A8KWGYJlcnxzkx2M+Y37em17YoKturqtlX24DXZk9LMrG8APKsCMM0GZid
      5vzIEP3TUxnNO1ridNFeUcW2impcVmtas+jlBZBnVQghCOk6fdOT9E1PMjw/SyC6uvTwiixT
      5nLTUFhMS1k5ZS43ipSZ9JF5AeRJG4mKkgZz4TCj/nkmA35mQkEC0SiReAzdiGOaAoFAlmRU
      Wcaqqtg1C167nRKni3KXhwq3B5umoaxBZZu8APJkFCFuljIV5u3GDySKrkoSiiShZDg58FLk
      BZBnQ5MPhsuzockLIM+GJi+APBuavADybGjyAsizockLIM+GJi+APBuavADybGjyAsizockL
      IM+GJi+APBuavADybGjyAsizockLIM+GJi+APBuavADybGjyAsizockLIM+G5v8HyX6qX3iL
      bTsAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
